/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the MembershipList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipList{}

// MembershipList struct for MembershipList
type MembershipList struct {
	Memberships          []Membership `json:"memberships,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MembershipList MembershipList

// NewMembershipList instantiates a new MembershipList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipList() *MembershipList {
	this := MembershipList{}
	return &this
}

// NewMembershipListWithDefaults instantiates a new MembershipList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipListWithDefaults() *MembershipList {
	this := MembershipList{}
	return &this
}

// GetMemberships returns the Memberships field value if set, zero value otherwise.
func (o *MembershipList) GetMemberships() []Membership {
	if o == nil || IsNil(o.Memberships) {
		var ret []Membership
		return ret
	}
	return o.Memberships
}

// GetMembershipsOk returns a tuple with the Memberships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipList) GetMembershipsOk() ([]Membership, bool) {
	if o == nil || IsNil(o.Memberships) {
		return nil, false
	}
	return o.Memberships, true
}

// HasMemberships returns a boolean if a field has been set.
func (o *MembershipList) HasMemberships() bool {
	if o != nil && !IsNil(o.Memberships) {
		return true
	}

	return false
}

// SetMemberships gets a reference to the given []Membership and assigns it to the Memberships field.
func (o *MembershipList) SetMemberships(v []Membership) {
	o.Memberships = v
}

func (o MembershipList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Memberships) {
		toSerialize["memberships"] = o.Memberships
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MembershipList) UnmarshalJSON(data []byte) (err error) {
	varMembershipList := _MembershipList{}

	err = json.Unmarshal(data, &varMembershipList)

	if err != nil {
		return err
	}

	*o = MembershipList(varMembershipList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "memberships")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMembershipList struct {
	value *MembershipList
	isSet bool
}

func (v NullableMembershipList) Get() *MembershipList {
	return v.value
}

func (v *NullableMembershipList) Set(val *MembershipList) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipList) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipList(val *MembershipList) *NullableMembershipList {
	return &NullableMembershipList{value: val, isSet: true}
}

func (v NullableMembershipList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
