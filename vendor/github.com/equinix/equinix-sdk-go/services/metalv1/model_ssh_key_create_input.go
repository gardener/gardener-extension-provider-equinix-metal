/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the SSHKeyCreateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SSHKeyCreateInput{}

// SSHKeyCreateInput struct for SSHKeyCreateInput
type SSHKeyCreateInput struct {
	// List of instance UUIDs to associate SSH key with, when empty array is sent all instances belonging       to entity will be included
	InstancesIds         []string `json:"instances_ids,omitempty"`
	Key                  *string  `json:"key,omitempty"`
	Label                *string  `json:"label,omitempty"`
	Tags                 []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SSHKeyCreateInput SSHKeyCreateInput

// NewSSHKeyCreateInput instantiates a new SSHKeyCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSSHKeyCreateInput() *SSHKeyCreateInput {
	this := SSHKeyCreateInput{}
	return &this
}

// NewSSHKeyCreateInputWithDefaults instantiates a new SSHKeyCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSSHKeyCreateInputWithDefaults() *SSHKeyCreateInput {
	this := SSHKeyCreateInput{}
	return &this
}

// GetInstancesIds returns the InstancesIds field value if set, zero value otherwise.
func (o *SSHKeyCreateInput) GetInstancesIds() []string {
	if o == nil || IsNil(o.InstancesIds) {
		var ret []string
		return ret
	}
	return o.InstancesIds
}

// GetInstancesIdsOk returns a tuple with the InstancesIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSHKeyCreateInput) GetInstancesIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.InstancesIds) {
		return nil, false
	}
	return o.InstancesIds, true
}

// HasInstancesIds returns a boolean if a field has been set.
func (o *SSHKeyCreateInput) HasInstancesIds() bool {
	if o != nil && !IsNil(o.InstancesIds) {
		return true
	}

	return false
}

// SetInstancesIds gets a reference to the given []string and assigns it to the InstancesIds field.
func (o *SSHKeyCreateInput) SetInstancesIds(v []string) {
	o.InstancesIds = v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *SSHKeyCreateInput) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSHKeyCreateInput) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *SSHKeyCreateInput) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *SSHKeyCreateInput) SetKey(v string) {
	o.Key = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *SSHKeyCreateInput) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSHKeyCreateInput) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *SSHKeyCreateInput) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *SSHKeyCreateInput) SetLabel(v string) {
	o.Label = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *SSHKeyCreateInput) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SSHKeyCreateInput) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *SSHKeyCreateInput) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *SSHKeyCreateInput) SetTags(v []string) {
	o.Tags = v
}

func (o SSHKeyCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SSHKeyCreateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstancesIds) {
		toSerialize["instances_ids"] = o.InstancesIds
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SSHKeyCreateInput) UnmarshalJSON(data []byte) (err error) {
	varSSHKeyCreateInput := _SSHKeyCreateInput{}

	err = json.Unmarshal(data, &varSSHKeyCreateInput)

	if err != nil {
		return err
	}

	*o = SSHKeyCreateInput(varSSHKeyCreateInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "instances_ids")
		delete(additionalProperties, "key")
		delete(additionalProperties, "label")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSSHKeyCreateInput struct {
	value *SSHKeyCreateInput
	isSet bool
}

func (v NullableSSHKeyCreateInput) Get() *SSHKeyCreateInput {
	return v.value
}

func (v *NullableSSHKeyCreateInput) Set(val *SSHKeyCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableSSHKeyCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableSSHKeyCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSSHKeyCreateInput(val *SSHKeyCreateInput) *NullableSSHKeyCreateInput {
	return &NullableSSHKeyCreateInput{value: val, isSet: true}
}

func (v NullableSSHKeyCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSSHKeyCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
