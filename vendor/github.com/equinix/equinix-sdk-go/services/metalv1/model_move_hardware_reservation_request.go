/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the MoveHardwareReservationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MoveHardwareReservationRequest{}

// MoveHardwareReservationRequest struct for MoveHardwareReservationRequest
type MoveHardwareReservationRequest struct {
	ProjectId            *string `json:"project_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MoveHardwareReservationRequest MoveHardwareReservationRequest

// NewMoveHardwareReservationRequest instantiates a new MoveHardwareReservationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMoveHardwareReservationRequest() *MoveHardwareReservationRequest {
	this := MoveHardwareReservationRequest{}
	return &this
}

// NewMoveHardwareReservationRequestWithDefaults instantiates a new MoveHardwareReservationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMoveHardwareReservationRequestWithDefaults() *MoveHardwareReservationRequest {
	this := MoveHardwareReservationRequest{}
	return &this
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *MoveHardwareReservationRequest) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MoveHardwareReservationRequest) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *MoveHardwareReservationRequest) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *MoveHardwareReservationRequest) SetProjectId(v string) {
	o.ProjectId = &v
}

func (o MoveHardwareReservationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MoveHardwareReservationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MoveHardwareReservationRequest) UnmarshalJSON(data []byte) (err error) {
	varMoveHardwareReservationRequest := _MoveHardwareReservationRequest{}

	err = json.Unmarshal(data, &varMoveHardwareReservationRequest)

	if err != nil {
		return err
	}

	*o = MoveHardwareReservationRequest(varMoveHardwareReservationRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "project_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMoveHardwareReservationRequest struct {
	value *MoveHardwareReservationRequest
	isSet bool
}

func (v NullableMoveHardwareReservationRequest) Get() *MoveHardwareReservationRequest {
	return v.value
}

func (v *NullableMoveHardwareReservationRequest) Set(val *MoveHardwareReservationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMoveHardwareReservationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMoveHardwareReservationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMoveHardwareReservationRequest(val *MoveHardwareReservationRequest) *NullableMoveHardwareReservationRequest {
	return &NullableMoveHardwareReservationRequest{value: val, isSet: true}
}

func (v NullableMoveHardwareReservationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMoveHardwareReservationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
