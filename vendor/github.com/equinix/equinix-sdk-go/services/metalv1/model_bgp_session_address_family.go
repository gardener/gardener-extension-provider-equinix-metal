/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// BgpSessionAddressFamily the model 'BgpSessionAddressFamily'
type BgpSessionAddressFamily string

// List of BgpSession_address_family
const (
	BGPSESSIONADDRESSFAMILY_IPV4 BgpSessionAddressFamily = "ipv4"
	BGPSESSIONADDRESSFAMILY_IPV6 BgpSessionAddressFamily = "ipv6"
)

// All allowed values of BgpSessionAddressFamily enum
var AllowedBgpSessionAddressFamilyEnumValues = []BgpSessionAddressFamily{
	"ipv4",
	"ipv6",
}

func (v *BgpSessionAddressFamily) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BgpSessionAddressFamily(value)
	for _, existing := range AllowedBgpSessionAddressFamilyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BgpSessionAddressFamily", value)
}

// NewBgpSessionAddressFamilyFromValue returns a pointer to a valid BgpSessionAddressFamily
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBgpSessionAddressFamilyFromValue(v string) (*BgpSessionAddressFamily, error) {
	ev := BgpSessionAddressFamily(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BgpSessionAddressFamily: valid values are %v", v, AllowedBgpSessionAddressFamilyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BgpSessionAddressFamily) IsValid() bool {
	for _, existing := range AllowedBgpSessionAddressFamilyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BgpSession_address_family value
func (v BgpSessionAddressFamily) Ptr() *BgpSessionAddressFamily {
	return &v
}

type NullableBgpSessionAddressFamily struct {
	value *BgpSessionAddressFamily
	isSet bool
}

func (v NullableBgpSessionAddressFamily) Get() *BgpSessionAddressFamily {
	return v.value
}

func (v *NullableBgpSessionAddressFamily) Set(val *BgpSessionAddressFamily) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpSessionAddressFamily) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpSessionAddressFamily) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpSessionAddressFamily(val *BgpSessionAddressFamily) *NullableBgpSessionAddressFamily {
	return &NullableBgpSessionAddressFamily{value: val, isSet: true}
}

func (v NullableBgpSessionAddressFamily) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpSessionAddressFamily) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
