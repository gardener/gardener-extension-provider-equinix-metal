/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// CreateOrganizationInterconnectionRequest - struct for CreateOrganizationInterconnectionRequest
type CreateOrganizationInterconnectionRequest struct {
	DedicatedPortCreateInput     *DedicatedPortCreateInput
	SharedPortVCVlanCreateInput  *SharedPortVCVlanCreateInput
	VlanCSPConnectionCreateInput *VlanCSPConnectionCreateInput
	VlanFabricVcCreateInput      *VlanFabricVcCreateInput
	VrfFabricVcCreateInput       *VrfFabricVcCreateInput
}

// DedicatedPortCreateInputAsCreateOrganizationInterconnectionRequest is a convenience function that returns DedicatedPortCreateInput wrapped in CreateOrganizationInterconnectionRequest
func DedicatedPortCreateInputAsCreateOrganizationInterconnectionRequest(v *DedicatedPortCreateInput) CreateOrganizationInterconnectionRequest {
	return CreateOrganizationInterconnectionRequest{
		DedicatedPortCreateInput: v,
	}
}

// SharedPortVCVlanCreateInputAsCreateOrganizationInterconnectionRequest is a convenience function that returns SharedPortVCVlanCreateInput wrapped in CreateOrganizationInterconnectionRequest
func SharedPortVCVlanCreateInputAsCreateOrganizationInterconnectionRequest(v *SharedPortVCVlanCreateInput) CreateOrganizationInterconnectionRequest {
	return CreateOrganizationInterconnectionRequest{
		SharedPortVCVlanCreateInput: v,
	}
}

// VlanCSPConnectionCreateInputAsCreateOrganizationInterconnectionRequest is a convenience function that returns VlanCSPConnectionCreateInput wrapped in CreateOrganizationInterconnectionRequest
func VlanCSPConnectionCreateInputAsCreateOrganizationInterconnectionRequest(v *VlanCSPConnectionCreateInput) CreateOrganizationInterconnectionRequest {
	return CreateOrganizationInterconnectionRequest{
		VlanCSPConnectionCreateInput: v,
	}
}

// VlanFabricVcCreateInputAsCreateOrganizationInterconnectionRequest is a convenience function that returns VlanFabricVcCreateInput wrapped in CreateOrganizationInterconnectionRequest
func VlanFabricVcCreateInputAsCreateOrganizationInterconnectionRequest(v *VlanFabricVcCreateInput) CreateOrganizationInterconnectionRequest {
	return CreateOrganizationInterconnectionRequest{
		VlanFabricVcCreateInput: v,
	}
}

// VrfFabricVcCreateInputAsCreateOrganizationInterconnectionRequest is a convenience function that returns VrfFabricVcCreateInput wrapped in CreateOrganizationInterconnectionRequest
func VrfFabricVcCreateInputAsCreateOrganizationInterconnectionRequest(v *VrfFabricVcCreateInput) CreateOrganizationInterconnectionRequest {
	return CreateOrganizationInterconnectionRequest{
		VrfFabricVcCreateInput: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *CreateOrganizationInterconnectionRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DedicatedPortCreateInput
	err = newStrictDecoder(data).Decode(&dst.DedicatedPortCreateInput)
	if err == nil {
		jsonDedicatedPortCreateInput, _ := json.Marshal(dst.DedicatedPortCreateInput)
		if string(jsonDedicatedPortCreateInput) == "{}" { // empty struct
			dst.DedicatedPortCreateInput = nil
		} else {
			match++
		}
	} else {
		dst.DedicatedPortCreateInput = nil
	}

	// try to unmarshal data into SharedPortVCVlanCreateInput
	err = newStrictDecoder(data).Decode(&dst.SharedPortVCVlanCreateInput)
	if err == nil {
		jsonSharedPortVCVlanCreateInput, _ := json.Marshal(dst.SharedPortVCVlanCreateInput)
		if string(jsonSharedPortVCVlanCreateInput) == "{}" { // empty struct
			dst.SharedPortVCVlanCreateInput = nil
		} else {
			match++
		}
	} else {
		dst.SharedPortVCVlanCreateInput = nil
	}

	// try to unmarshal data into VlanCSPConnectionCreateInput
	err = newStrictDecoder(data).Decode(&dst.VlanCSPConnectionCreateInput)
	if err == nil {
		jsonVlanCSPConnectionCreateInput, _ := json.Marshal(dst.VlanCSPConnectionCreateInput)
		if string(jsonVlanCSPConnectionCreateInput) == "{}" { // empty struct
			dst.VlanCSPConnectionCreateInput = nil
		} else {
			match++
		}
	} else {
		dst.VlanCSPConnectionCreateInput = nil
	}

	// try to unmarshal data into VlanFabricVcCreateInput
	err = newStrictDecoder(data).Decode(&dst.VlanFabricVcCreateInput)
	if err == nil {
		jsonVlanFabricVcCreateInput, _ := json.Marshal(dst.VlanFabricVcCreateInput)
		if string(jsonVlanFabricVcCreateInput) == "{}" { // empty struct
			dst.VlanFabricVcCreateInput = nil
		} else {
			match++
		}
	} else {
		dst.VlanFabricVcCreateInput = nil
	}

	// try to unmarshal data into VrfFabricVcCreateInput
	err = newStrictDecoder(data).Decode(&dst.VrfFabricVcCreateInput)
	if err == nil {
		jsonVrfFabricVcCreateInput, _ := json.Marshal(dst.VrfFabricVcCreateInput)
		if string(jsonVrfFabricVcCreateInput) == "{}" { // empty struct
			dst.VrfFabricVcCreateInput = nil
		} else {
			match++
		}
	} else {
		dst.VrfFabricVcCreateInput = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DedicatedPortCreateInput = nil
		dst.SharedPortVCVlanCreateInput = nil
		dst.VlanCSPConnectionCreateInput = nil
		dst.VlanFabricVcCreateInput = nil
		dst.VrfFabricVcCreateInput = nil

		return fmt.Errorf("data matches more than one schema in oneOf(CreateOrganizationInterconnectionRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(CreateOrganizationInterconnectionRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CreateOrganizationInterconnectionRequest) MarshalJSON() ([]byte, error) {
	if src.DedicatedPortCreateInput != nil {
		return json.Marshal(&src.DedicatedPortCreateInput)
	}

	if src.SharedPortVCVlanCreateInput != nil {
		return json.Marshal(&src.SharedPortVCVlanCreateInput)
	}

	if src.VlanCSPConnectionCreateInput != nil {
		return json.Marshal(&src.VlanCSPConnectionCreateInput)
	}

	if src.VlanFabricVcCreateInput != nil {
		return json.Marshal(&src.VlanFabricVcCreateInput)
	}

	if src.VrfFabricVcCreateInput != nil {
		return json.Marshal(&src.VrfFabricVcCreateInput)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CreateOrganizationInterconnectionRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DedicatedPortCreateInput != nil {
		return obj.DedicatedPortCreateInput
	}

	if obj.SharedPortVCVlanCreateInput != nil {
		return obj.SharedPortVCVlanCreateInput
	}

	if obj.VlanCSPConnectionCreateInput != nil {
		return obj.VlanCSPConnectionCreateInput
	}

	if obj.VlanFabricVcCreateInput != nil {
		return obj.VlanFabricVcCreateInput
	}

	if obj.VrfFabricVcCreateInput != nil {
		return obj.VrfFabricVcCreateInput
	}

	// all schemas are nil
	return nil
}

type NullableCreateOrganizationInterconnectionRequest struct {
	value *CreateOrganizationInterconnectionRequest
	isSet bool
}

func (v NullableCreateOrganizationInterconnectionRequest) Get() *CreateOrganizationInterconnectionRequest {
	return v.value
}

func (v *NullableCreateOrganizationInterconnectionRequest) Set(val *CreateOrganizationInterconnectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationInterconnectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationInterconnectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationInterconnectionRequest(val *CreateOrganizationInterconnectionRequest) *NullableCreateOrganizationInterconnectionRequest {
	return &NullableCreateOrganizationInterconnectionRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationInterconnectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationInterconnectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
