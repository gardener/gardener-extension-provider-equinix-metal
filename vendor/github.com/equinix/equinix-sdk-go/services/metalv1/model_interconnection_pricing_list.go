/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the InterconnectionPricingList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterconnectionPricingList{}

// InterconnectionPricingList struct for InterconnectionPricingList
type InterconnectionPricingList struct {
	// Pricing information per connection provider.
	ProviderPricing      []InterconnectionPricingListProviderPricingInner `json:"provider_pricing,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InterconnectionPricingList InterconnectionPricingList

// NewInterconnectionPricingList instantiates a new InterconnectionPricingList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterconnectionPricingList() *InterconnectionPricingList {
	this := InterconnectionPricingList{}
	return &this
}

// NewInterconnectionPricingListWithDefaults instantiates a new InterconnectionPricingList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterconnectionPricingListWithDefaults() *InterconnectionPricingList {
	this := InterconnectionPricingList{}
	return &this
}

// GetProviderPricing returns the ProviderPricing field value if set, zero value otherwise.
func (o *InterconnectionPricingList) GetProviderPricing() []InterconnectionPricingListProviderPricingInner {
	if o == nil || IsNil(o.ProviderPricing) {
		var ret []InterconnectionPricingListProviderPricingInner
		return ret
	}
	return o.ProviderPricing
}

// GetProviderPricingOk returns a tuple with the ProviderPricing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionPricingList) GetProviderPricingOk() ([]InterconnectionPricingListProviderPricingInner, bool) {
	if o == nil || IsNil(o.ProviderPricing) {
		return nil, false
	}
	return o.ProviderPricing, true
}

// HasProviderPricing returns a boolean if a field has been set.
func (o *InterconnectionPricingList) HasProviderPricing() bool {
	if o != nil && !IsNil(o.ProviderPricing) {
		return true
	}

	return false
}

// SetProviderPricing gets a reference to the given []InterconnectionPricingListProviderPricingInner and assigns it to the ProviderPricing field.
func (o *InterconnectionPricingList) SetProviderPricing(v []InterconnectionPricingListProviderPricingInner) {
	o.ProviderPricing = v
}

func (o InterconnectionPricingList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterconnectionPricingList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProviderPricing) {
		toSerialize["provider_pricing"] = o.ProviderPricing
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InterconnectionPricingList) UnmarshalJSON(data []byte) (err error) {
	varInterconnectionPricingList := _InterconnectionPricingList{}

	err = json.Unmarshal(data, &varInterconnectionPricingList)

	if err != nil {
		return err
	}

	*o = InterconnectionPricingList(varInterconnectionPricingList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "provider_pricing")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInterconnectionPricingList struct {
	value *InterconnectionPricingList
	isSet bool
}

func (v NullableInterconnectionPricingList) Get() *InterconnectionPricingList {
	return v.value
}

func (v *NullableInterconnectionPricingList) Set(val *InterconnectionPricingList) {
	v.value = val
	v.isSet = true
}

func (v NullableInterconnectionPricingList) IsSet() bool {
	return v.isSet
}

func (v *NullableInterconnectionPricingList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterconnectionPricingList(val *InterconnectionPricingList) *NullableInterconnectionPricingList {
	return &NullableInterconnectionPricingList{value: val, isSet: true}
}

func (v NullableInterconnectionPricingList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterconnectionPricingList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
