/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"time"
)

// checks if the FabricServiceToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FabricServiceToken{}

// FabricServiceToken struct for FabricServiceToken
type FabricServiceToken struct {
	// The expiration date and time of the Fabric service token. Once a service token is expired, it is no longer redeemable.
	ExpiresAt *time.Time `json:"expires_at,omitempty"`
	// The UUID that can be used on the Fabric Portal to redeem either an A-Side or Z-Side Service Token. For Fabric VCs (Metal Billed), this UUID will represent an A-Side Service Token, which will allow interconnections to be made from Equinix Metal to other Service Providers on Fabric. For Fabric VCs (Fabric Billed), this UUID will represent a Z-Side Service Token, which will allow interconnections to be made to connect an owned Fabric Port or  Virtual Device to Equinix Metal.
	Id *string `json:"id,omitempty"`
	// The maximum speed that can be selected on the Fabric Portal when configuring a interconnection with either  an A-Side or Z-Side Service Token. For Fabric VCs (Metal Billed), this is what the billing is based off of, and can be one of the following options, '50mbps', '200mbps', '500mbps', '1gbps', '2gbps', '5gbps' or '10gbps'. For Fabric VCs (Fabric Billed), this will default to 10Gbps.
	MaxAllowedSpeed      *int64                              `json:"max_allowed_speed,omitempty"`
	Role                 *FabricServiceTokenRole             `json:"role,omitempty"`
	ServiceTokenType     *FabricServiceTokenServiceTokenType `json:"service_token_type,omitempty"`
	State                *FabricServiceTokenState            `json:"state,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FabricServiceToken FabricServiceToken

// NewFabricServiceToken instantiates a new FabricServiceToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFabricServiceToken() *FabricServiceToken {
	this := FabricServiceToken{}
	return &this
}

// NewFabricServiceTokenWithDefaults instantiates a new FabricServiceToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFabricServiceTokenWithDefaults() *FabricServiceToken {
	this := FabricServiceToken{}
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *FabricServiceToken) GetExpiresAt() time.Time {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricServiceToken) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *FabricServiceToken) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *FabricServiceToken) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FabricServiceToken) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricServiceToken) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FabricServiceToken) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FabricServiceToken) SetId(v string) {
	o.Id = &v
}

// GetMaxAllowedSpeed returns the MaxAllowedSpeed field value if set, zero value otherwise.
func (o *FabricServiceToken) GetMaxAllowedSpeed() int64 {
	if o == nil || IsNil(o.MaxAllowedSpeed) {
		var ret int64
		return ret
	}
	return *o.MaxAllowedSpeed
}

// GetMaxAllowedSpeedOk returns a tuple with the MaxAllowedSpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricServiceToken) GetMaxAllowedSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxAllowedSpeed) {
		return nil, false
	}
	return o.MaxAllowedSpeed, true
}

// HasMaxAllowedSpeed returns a boolean if a field has been set.
func (o *FabricServiceToken) HasMaxAllowedSpeed() bool {
	if o != nil && !IsNil(o.MaxAllowedSpeed) {
		return true
	}

	return false
}

// SetMaxAllowedSpeed gets a reference to the given int64 and assigns it to the MaxAllowedSpeed field.
func (o *FabricServiceToken) SetMaxAllowedSpeed(v int64) {
	o.MaxAllowedSpeed = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *FabricServiceToken) GetRole() FabricServiceTokenRole {
	if o == nil || IsNil(o.Role) {
		var ret FabricServiceTokenRole
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricServiceToken) GetRoleOk() (*FabricServiceTokenRole, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *FabricServiceToken) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given FabricServiceTokenRole and assigns it to the Role field.
func (o *FabricServiceToken) SetRole(v FabricServiceTokenRole) {
	o.Role = &v
}

// GetServiceTokenType returns the ServiceTokenType field value if set, zero value otherwise.
func (o *FabricServiceToken) GetServiceTokenType() FabricServiceTokenServiceTokenType {
	if o == nil || IsNil(o.ServiceTokenType) {
		var ret FabricServiceTokenServiceTokenType
		return ret
	}
	return *o.ServiceTokenType
}

// GetServiceTokenTypeOk returns a tuple with the ServiceTokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricServiceToken) GetServiceTokenTypeOk() (*FabricServiceTokenServiceTokenType, bool) {
	if o == nil || IsNil(o.ServiceTokenType) {
		return nil, false
	}
	return o.ServiceTokenType, true
}

// HasServiceTokenType returns a boolean if a field has been set.
func (o *FabricServiceToken) HasServiceTokenType() bool {
	if o != nil && !IsNil(o.ServiceTokenType) {
		return true
	}

	return false
}

// SetServiceTokenType gets a reference to the given FabricServiceTokenServiceTokenType and assigns it to the ServiceTokenType field.
func (o *FabricServiceToken) SetServiceTokenType(v FabricServiceTokenServiceTokenType) {
	o.ServiceTokenType = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *FabricServiceToken) GetState() FabricServiceTokenState {
	if o == nil || IsNil(o.State) {
		var ret FabricServiceTokenState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FabricServiceToken) GetStateOk() (*FabricServiceTokenState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *FabricServiceToken) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given FabricServiceTokenState and assigns it to the State field.
func (o *FabricServiceToken) SetState(v FabricServiceTokenState) {
	o.State = &v
}

func (o FabricServiceToken) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FabricServiceToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MaxAllowedSpeed) {
		toSerialize["max_allowed_speed"] = o.MaxAllowedSpeed
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.ServiceTokenType) {
		toSerialize["service_token_type"] = o.ServiceTokenType
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FabricServiceToken) UnmarshalJSON(data []byte) (err error) {
	varFabricServiceToken := _FabricServiceToken{}

	err = json.Unmarshal(data, &varFabricServiceToken)

	if err != nil {
		return err
	}

	*o = FabricServiceToken(varFabricServiceToken)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "expires_at")
		delete(additionalProperties, "id")
		delete(additionalProperties, "max_allowed_speed")
		delete(additionalProperties, "role")
		delete(additionalProperties, "service_token_type")
		delete(additionalProperties, "state")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFabricServiceToken struct {
	value *FabricServiceToken
	isSet bool
}

func (v NullableFabricServiceToken) Get() *FabricServiceToken {
	return v.value
}

func (v *NullableFabricServiceToken) Set(val *FabricServiceToken) {
	v.value = val
	v.isSet = true
}

func (v NullableFabricServiceToken) IsSet() bool {
	return v.isSet
}

func (v *NullableFabricServiceToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFabricServiceToken(val *FabricServiceToken) *NullableFabricServiceToken {
	return &NullableFabricServiceToken{value: val, isSet: true}
}

func (v NullableFabricServiceToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFabricServiceToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
