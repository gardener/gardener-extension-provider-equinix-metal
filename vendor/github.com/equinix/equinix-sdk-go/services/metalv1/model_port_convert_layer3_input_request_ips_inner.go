/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the PortConvertLayer3InputRequestIpsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortConvertLayer3InputRequestIpsInner{}

// PortConvertLayer3InputRequestIpsInner struct for PortConvertLayer3InputRequestIpsInner
type PortConvertLayer3InputRequestIpsInner struct {
	AddressFamily        *int32 `json:"address_family,omitempty"`
	Public               *bool  `json:"public,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PortConvertLayer3InputRequestIpsInner PortConvertLayer3InputRequestIpsInner

// NewPortConvertLayer3InputRequestIpsInner instantiates a new PortConvertLayer3InputRequestIpsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortConvertLayer3InputRequestIpsInner() *PortConvertLayer3InputRequestIpsInner {
	this := PortConvertLayer3InputRequestIpsInner{}
	return &this
}

// NewPortConvertLayer3InputRequestIpsInnerWithDefaults instantiates a new PortConvertLayer3InputRequestIpsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortConvertLayer3InputRequestIpsInnerWithDefaults() *PortConvertLayer3InputRequestIpsInner {
	this := PortConvertLayer3InputRequestIpsInner{}
	return &this
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *PortConvertLayer3InputRequestIpsInner) GetAddressFamily() int32 {
	if o == nil || IsNil(o.AddressFamily) {
		var ret int32
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConvertLayer3InputRequestIpsInner) GetAddressFamilyOk() (*int32, bool) {
	if o == nil || IsNil(o.AddressFamily) {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *PortConvertLayer3InputRequestIpsInner) HasAddressFamily() bool {
	if o != nil && !IsNil(o.AddressFamily) {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given int32 and assigns it to the AddressFamily field.
func (o *PortConvertLayer3InputRequestIpsInner) SetAddressFamily(v int32) {
	o.AddressFamily = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *PortConvertLayer3InputRequestIpsInner) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConvertLayer3InputRequestIpsInner) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *PortConvertLayer3InputRequestIpsInner) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *PortConvertLayer3InputRequestIpsInner) SetPublic(v bool) {
	o.Public = &v
}

func (o PortConvertLayer3InputRequestIpsInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortConvertLayer3InputRequestIpsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressFamily) {
		toSerialize["address_family"] = o.AddressFamily
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PortConvertLayer3InputRequestIpsInner) UnmarshalJSON(data []byte) (err error) {
	varPortConvertLayer3InputRequestIpsInner := _PortConvertLayer3InputRequestIpsInner{}

	err = json.Unmarshal(data, &varPortConvertLayer3InputRequestIpsInner)

	if err != nil {
		return err
	}

	*o = PortConvertLayer3InputRequestIpsInner(varPortConvertLayer3InputRequestIpsInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address_family")
		delete(additionalProperties, "public")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePortConvertLayer3InputRequestIpsInner struct {
	value *PortConvertLayer3InputRequestIpsInner
	isSet bool
}

func (v NullablePortConvertLayer3InputRequestIpsInner) Get() *PortConvertLayer3InputRequestIpsInner {
	return v.value
}

func (v *NullablePortConvertLayer3InputRequestIpsInner) Set(val *PortConvertLayer3InputRequestIpsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePortConvertLayer3InputRequestIpsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePortConvertLayer3InputRequestIpsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortConvertLayer3InputRequestIpsInner(val *PortConvertLayer3InputRequestIpsInner) *NullablePortConvertLayer3InputRequestIpsInner {
	return &NullablePortConvertLayer3InputRequestIpsInner{value: val, isSet: true}
}

func (v NullablePortConvertLayer3InputRequestIpsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortConvertLayer3InputRequestIpsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
