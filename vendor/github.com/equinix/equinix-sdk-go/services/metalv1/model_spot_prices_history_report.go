/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the SpotPricesHistoryReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotPricesHistoryReport{}

// SpotPricesHistoryReport struct for SpotPricesHistoryReport
type SpotPricesHistoryReport struct {
	PricesHistory        *SpotPricesDatapoints `json:"prices_history,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpotPricesHistoryReport SpotPricesHistoryReport

// NewSpotPricesHistoryReport instantiates a new SpotPricesHistoryReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotPricesHistoryReport() *SpotPricesHistoryReport {
	this := SpotPricesHistoryReport{}
	return &this
}

// NewSpotPricesHistoryReportWithDefaults instantiates a new SpotPricesHistoryReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotPricesHistoryReportWithDefaults() *SpotPricesHistoryReport {
	this := SpotPricesHistoryReport{}
	return &this
}

// GetPricesHistory returns the PricesHistory field value if set, zero value otherwise.
func (o *SpotPricesHistoryReport) GetPricesHistory() SpotPricesDatapoints {
	if o == nil || IsNil(o.PricesHistory) {
		var ret SpotPricesDatapoints
		return ret
	}
	return *o.PricesHistory
}

// GetPricesHistoryOk returns a tuple with the PricesHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesHistoryReport) GetPricesHistoryOk() (*SpotPricesDatapoints, bool) {
	if o == nil || IsNil(o.PricesHistory) {
		return nil, false
	}
	return o.PricesHistory, true
}

// HasPricesHistory returns a boolean if a field has been set.
func (o *SpotPricesHistoryReport) HasPricesHistory() bool {
	if o != nil && !IsNil(o.PricesHistory) {
		return true
	}

	return false
}

// SetPricesHistory gets a reference to the given SpotPricesDatapoints and assigns it to the PricesHistory field.
func (o *SpotPricesHistoryReport) SetPricesHistory(v SpotPricesDatapoints) {
	o.PricesHistory = &v
}

func (o SpotPricesHistoryReport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotPricesHistoryReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PricesHistory) {
		toSerialize["prices_history"] = o.PricesHistory
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpotPricesHistoryReport) UnmarshalJSON(data []byte) (err error) {
	varSpotPricesHistoryReport := _SpotPricesHistoryReport{}

	err = json.Unmarshal(data, &varSpotPricesHistoryReport)

	if err != nil {
		return err
	}

	*o = SpotPricesHistoryReport(varSpotPricesHistoryReport)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "prices_history")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpotPricesHistoryReport struct {
	value *SpotPricesHistoryReport
	isSet bool
}

func (v NullableSpotPricesHistoryReport) Get() *SpotPricesHistoryReport {
	return v.value
}

func (v *NullableSpotPricesHistoryReport) Set(val *SpotPricesHistoryReport) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotPricesHistoryReport) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotPricesHistoryReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotPricesHistoryReport(val *SpotPricesHistoryReport) *NullableSpotPricesHistoryReport {
	return &NullableSpotPricesHistoryReport{value: val, isSet: true}
}

func (v NullableSpotPricesHistoryReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotPricesHistoryReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
