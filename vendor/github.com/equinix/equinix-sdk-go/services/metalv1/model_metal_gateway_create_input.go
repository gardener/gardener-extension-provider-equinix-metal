/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// checks if the MetalGatewayCreateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetalGatewayCreateInput{}

// MetalGatewayCreateInput struct for MetalGatewayCreateInput
type MetalGatewayCreateInput struct {
	// The UUID of an IP reservation that belongs to the same project as where the metal gateway will be created in. This field is required unless the private IPv4 subnet size is specified.
	IpReservationId *string `json:"ip_reservation_id,omitempty"`
	// The subnet size (8, 16, 32, 64, or 128) of the private IPv4 reservation that will be created for the metal gateway. This field is required unless a project IP reservation was specified.           Please keep in mind that the number of private metal gateway ranges are limited per project. If you would like to increase the limit per project, please contact support for assistance.
	PrivateIpv4SubnetSize *int32 `json:"private_ipv4_subnet_size,omitempty"`
	// The UUID of a metro virtual network that belongs to the same project as where the metal gateway will be created in.
	VirtualNetworkId     string `json:"virtual_network_id"`
	AdditionalProperties map[string]interface{}
}

type _MetalGatewayCreateInput MetalGatewayCreateInput

// NewMetalGatewayCreateInput instantiates a new MetalGatewayCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetalGatewayCreateInput(virtualNetworkId string) *MetalGatewayCreateInput {
	this := MetalGatewayCreateInput{}
	this.VirtualNetworkId = virtualNetworkId
	return &this
}

// NewMetalGatewayCreateInputWithDefaults instantiates a new MetalGatewayCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetalGatewayCreateInputWithDefaults() *MetalGatewayCreateInput {
	this := MetalGatewayCreateInput{}
	return &this
}

// GetIpReservationId returns the IpReservationId field value if set, zero value otherwise.
func (o *MetalGatewayCreateInput) GetIpReservationId() string {
	if o == nil || IsNil(o.IpReservationId) {
		var ret string
		return ret
	}
	return *o.IpReservationId
}

// GetIpReservationIdOk returns a tuple with the IpReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayCreateInput) GetIpReservationIdOk() (*string, bool) {
	if o == nil || IsNil(o.IpReservationId) {
		return nil, false
	}
	return o.IpReservationId, true
}

// HasIpReservationId returns a boolean if a field has been set.
func (o *MetalGatewayCreateInput) HasIpReservationId() bool {
	if o != nil && !IsNil(o.IpReservationId) {
		return true
	}

	return false
}

// SetIpReservationId gets a reference to the given string and assigns it to the IpReservationId field.
func (o *MetalGatewayCreateInput) SetIpReservationId(v string) {
	o.IpReservationId = &v
}

// GetPrivateIpv4SubnetSize returns the PrivateIpv4SubnetSize field value if set, zero value otherwise.
func (o *MetalGatewayCreateInput) GetPrivateIpv4SubnetSize() int32 {
	if o == nil || IsNil(o.PrivateIpv4SubnetSize) {
		var ret int32
		return ret
	}
	return *o.PrivateIpv4SubnetSize
}

// GetPrivateIpv4SubnetSizeOk returns a tuple with the PrivateIpv4SubnetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayCreateInput) GetPrivateIpv4SubnetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PrivateIpv4SubnetSize) {
		return nil, false
	}
	return o.PrivateIpv4SubnetSize, true
}

// HasPrivateIpv4SubnetSize returns a boolean if a field has been set.
func (o *MetalGatewayCreateInput) HasPrivateIpv4SubnetSize() bool {
	if o != nil && !IsNil(o.PrivateIpv4SubnetSize) {
		return true
	}

	return false
}

// SetPrivateIpv4SubnetSize gets a reference to the given int32 and assigns it to the PrivateIpv4SubnetSize field.
func (o *MetalGatewayCreateInput) SetPrivateIpv4SubnetSize(v int32) {
	o.PrivateIpv4SubnetSize = &v
}

// GetVirtualNetworkId returns the VirtualNetworkId field value
func (o *MetalGatewayCreateInput) GetVirtualNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualNetworkId
}

// GetVirtualNetworkIdOk returns a tuple with the VirtualNetworkId field value
// and a boolean to check if the value has been set.
func (o *MetalGatewayCreateInput) GetVirtualNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualNetworkId, true
}

// SetVirtualNetworkId sets field value
func (o *MetalGatewayCreateInput) SetVirtualNetworkId(v string) {
	o.VirtualNetworkId = v
}

func (o MetalGatewayCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetalGatewayCreateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpReservationId) {
		toSerialize["ip_reservation_id"] = o.IpReservationId
	}
	if !IsNil(o.PrivateIpv4SubnetSize) {
		toSerialize["private_ipv4_subnet_size"] = o.PrivateIpv4SubnetSize
	}
	toSerialize["virtual_network_id"] = o.VirtualNetworkId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetalGatewayCreateInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"virtual_network_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMetalGatewayCreateInput := _MetalGatewayCreateInput{}

	err = json.Unmarshal(data, &varMetalGatewayCreateInput)

	if err != nil {
		return err
	}

	*o = MetalGatewayCreateInput(varMetalGatewayCreateInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ip_reservation_id")
		delete(additionalProperties, "private_ipv4_subnet_size")
		delete(additionalProperties, "virtual_network_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetalGatewayCreateInput struct {
	value *MetalGatewayCreateInput
	isSet bool
}

func (v NullableMetalGatewayCreateInput) Get() *MetalGatewayCreateInput {
	return v.value
}

func (v *NullableMetalGatewayCreateInput) Set(val *MetalGatewayCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMetalGatewayCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMetalGatewayCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetalGatewayCreateInput(val *MetalGatewayCreateInput) *NullableMetalGatewayCreateInput {
	return &NullableMetalGatewayCreateInput{value: val, isSet: true}
}

func (v NullableMetalGatewayCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetalGatewayCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
