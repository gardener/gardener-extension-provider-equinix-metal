/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the GlobalBgpRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GlobalBgpRange{}

// GlobalBgpRange struct for GlobalBgpRange
type GlobalBgpRange struct {
	AddressFamily        *int32  `json:"address_family,omitempty"`
	Href                 *string `json:"href,omitempty"`
	Id                   *string `json:"id,omitempty"`
	Project              *Href   `json:"project,omitempty"`
	Range                *string `json:"range,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GlobalBgpRange GlobalBgpRange

// NewGlobalBgpRange instantiates a new GlobalBgpRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGlobalBgpRange() *GlobalBgpRange {
	this := GlobalBgpRange{}
	return &this
}

// NewGlobalBgpRangeWithDefaults instantiates a new GlobalBgpRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGlobalBgpRangeWithDefaults() *GlobalBgpRange {
	this := GlobalBgpRange{}
	return &this
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *GlobalBgpRange) GetAddressFamily() int32 {
	if o == nil || IsNil(o.AddressFamily) {
		var ret int32
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalBgpRange) GetAddressFamilyOk() (*int32, bool) {
	if o == nil || IsNil(o.AddressFamily) {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *GlobalBgpRange) HasAddressFamily() bool {
	if o != nil && !IsNil(o.AddressFamily) {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given int32 and assigns it to the AddressFamily field.
func (o *GlobalBgpRange) SetAddressFamily(v int32) {
	o.AddressFamily = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *GlobalBgpRange) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalBgpRange) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *GlobalBgpRange) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *GlobalBgpRange) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GlobalBgpRange) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalBgpRange) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GlobalBgpRange) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GlobalBgpRange) SetId(v string) {
	o.Id = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *GlobalBgpRange) GetProject() Href {
	if o == nil || IsNil(o.Project) {
		var ret Href
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalBgpRange) GetProjectOk() (*Href, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *GlobalBgpRange) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given Href and assigns it to the Project field.
func (o *GlobalBgpRange) SetProject(v Href) {
	o.Project = &v
}

// GetRange returns the Range field value if set, zero value otherwise.
func (o *GlobalBgpRange) GetRange() string {
	if o == nil || IsNil(o.Range) {
		var ret string
		return ret
	}
	return *o.Range
}

// GetRangeOk returns a tuple with the Range field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GlobalBgpRange) GetRangeOk() (*string, bool) {
	if o == nil || IsNil(o.Range) {
		return nil, false
	}
	return o.Range, true
}

// HasRange returns a boolean if a field has been set.
func (o *GlobalBgpRange) HasRange() bool {
	if o != nil && !IsNil(o.Range) {
		return true
	}

	return false
}

// SetRange gets a reference to the given string and assigns it to the Range field.
func (o *GlobalBgpRange) SetRange(v string) {
	o.Range = &v
}

func (o GlobalBgpRange) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GlobalBgpRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressFamily) {
		toSerialize["address_family"] = o.AddressFamily
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Range) {
		toSerialize["range"] = o.Range
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GlobalBgpRange) UnmarshalJSON(data []byte) (err error) {
	varGlobalBgpRange := _GlobalBgpRange{}

	err = json.Unmarshal(data, &varGlobalBgpRange)

	if err != nil {
		return err
	}

	*o = GlobalBgpRange(varGlobalBgpRange)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address_family")
		delete(additionalProperties, "href")
		delete(additionalProperties, "id")
		delete(additionalProperties, "project")
		delete(additionalProperties, "range")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGlobalBgpRange struct {
	value *GlobalBgpRange
	isSet bool
}

func (v NullableGlobalBgpRange) Get() *GlobalBgpRange {
	return v.value
}

func (v *NullableGlobalBgpRange) Set(val *GlobalBgpRange) {
	v.value = val
	v.isSet = true
}

func (v NullableGlobalBgpRange) IsSet() bool {
	return v.isSet
}

func (v *NullableGlobalBgpRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGlobalBgpRange(val *GlobalBgpRange) *NullableGlobalBgpRange {
	return &NullableGlobalBgpRange{value: val, isSet: true}
}

func (v NullableGlobalBgpRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGlobalBgpRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
