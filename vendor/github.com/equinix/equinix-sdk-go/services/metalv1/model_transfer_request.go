/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"time"
)

// checks if the TransferRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferRequest{}

// TransferRequest struct for TransferRequest
type TransferRequest struct {
	CreatedAt            *time.Time `json:"created_at,omitempty"`
	Href                 *string    `json:"href,omitempty"`
	Id                   *string    `json:"id,omitempty"`
	Project              *Href      `json:"project,omitempty"`
	TargetOrganization   *Href      `json:"target_organization,omitempty"`
	UpdatedAt            *time.Time `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _TransferRequest TransferRequest

// NewTransferRequest instantiates a new TransferRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferRequest() *TransferRequest {
	this := TransferRequest{}
	return &this
}

// NewTransferRequestWithDefaults instantiates a new TransferRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferRequestWithDefaults() *TransferRequest {
	this := TransferRequest{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *TransferRequest) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRequest) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *TransferRequest) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *TransferRequest) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *TransferRequest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRequest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *TransferRequest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *TransferRequest) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TransferRequest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRequest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TransferRequest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *TransferRequest) SetId(v string) {
	o.Id = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *TransferRequest) GetProject() Href {
	if o == nil || IsNil(o.Project) {
		var ret Href
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRequest) GetProjectOk() (*Href, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *TransferRequest) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given Href and assigns it to the Project field.
func (o *TransferRequest) SetProject(v Href) {
	o.Project = &v
}

// GetTargetOrganization returns the TargetOrganization field value if set, zero value otherwise.
func (o *TransferRequest) GetTargetOrganization() Href {
	if o == nil || IsNil(o.TargetOrganization) {
		var ret Href
		return ret
	}
	return *o.TargetOrganization
}

// GetTargetOrganizationOk returns a tuple with the TargetOrganization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRequest) GetTargetOrganizationOk() (*Href, bool) {
	if o == nil || IsNil(o.TargetOrganization) {
		return nil, false
	}
	return o.TargetOrganization, true
}

// HasTargetOrganization returns a boolean if a field has been set.
func (o *TransferRequest) HasTargetOrganization() bool {
	if o != nil && !IsNil(o.TargetOrganization) {
		return true
	}

	return false
}

// SetTargetOrganization gets a reference to the given Href and assigns it to the TargetOrganization field.
func (o *TransferRequest) SetTargetOrganization(v Href) {
	o.TargetOrganization = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *TransferRequest) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransferRequest) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *TransferRequest) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *TransferRequest) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o TransferRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.TargetOrganization) {
		toSerialize["target_organization"] = o.TargetOrganization
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *TransferRequest) UnmarshalJSON(data []byte) (err error) {
	varTransferRequest := _TransferRequest{}

	err = json.Unmarshal(data, &varTransferRequest)

	if err != nil {
		return err
	}

	*o = TransferRequest(varTransferRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "href")
		delete(additionalProperties, "id")
		delete(additionalProperties, "project")
		delete(additionalProperties, "target_organization")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableTransferRequest struct {
	value *TransferRequest
	isSet bool
}

func (v NullableTransferRequest) Get() *TransferRequest {
	return v.value
}

func (v *NullableTransferRequest) Set(val *TransferRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferRequest(val *TransferRequest) *NullableTransferRequest {
	return &NullableTransferRequest{value: val, isSet: true}
}

func (v NullableTransferRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
