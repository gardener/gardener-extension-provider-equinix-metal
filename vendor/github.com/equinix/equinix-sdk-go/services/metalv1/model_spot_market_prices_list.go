/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the SpotMarketPricesList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotMarketPricesList{}

// SpotMarketPricesList struct for SpotMarketPricesList
type SpotMarketPricesList struct {
	SpotMarketPrices     *SpotPricesReport `json:"spot_market_prices,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpotMarketPricesList SpotMarketPricesList

// NewSpotMarketPricesList instantiates a new SpotMarketPricesList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotMarketPricesList() *SpotMarketPricesList {
	this := SpotMarketPricesList{}
	return &this
}

// NewSpotMarketPricesListWithDefaults instantiates a new SpotMarketPricesList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotMarketPricesListWithDefaults() *SpotMarketPricesList {
	this := SpotMarketPricesList{}
	return &this
}

// GetSpotMarketPrices returns the SpotMarketPrices field value if set, zero value otherwise.
func (o *SpotMarketPricesList) GetSpotMarketPrices() SpotPricesReport {
	if o == nil || IsNil(o.SpotMarketPrices) {
		var ret SpotPricesReport
		return ret
	}
	return *o.SpotMarketPrices
}

// GetSpotMarketPricesOk returns a tuple with the SpotMarketPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotMarketPricesList) GetSpotMarketPricesOk() (*SpotPricesReport, bool) {
	if o == nil || IsNil(o.SpotMarketPrices) {
		return nil, false
	}
	return o.SpotMarketPrices, true
}

// HasSpotMarketPrices returns a boolean if a field has been set.
func (o *SpotMarketPricesList) HasSpotMarketPrices() bool {
	if o != nil && !IsNil(o.SpotMarketPrices) {
		return true
	}

	return false
}

// SetSpotMarketPrices gets a reference to the given SpotPricesReport and assigns it to the SpotMarketPrices field.
func (o *SpotMarketPricesList) SetSpotMarketPrices(v SpotPricesReport) {
	o.SpotMarketPrices = &v
}

func (o SpotMarketPricesList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotMarketPricesList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpotMarketPrices) {
		toSerialize["spot_market_prices"] = o.SpotMarketPrices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpotMarketPricesList) UnmarshalJSON(data []byte) (err error) {
	varSpotMarketPricesList := _SpotMarketPricesList{}

	err = json.Unmarshal(data, &varSpotMarketPricesList)

	if err != nil {
		return err
	}

	*o = SpotMarketPricesList(varSpotMarketPricesList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "spot_market_prices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpotMarketPricesList struct {
	value *SpotMarketPricesList
	isSet bool
}

func (v NullableSpotMarketPricesList) Get() *SpotMarketPricesList {
	return v.value
}

func (v *NullableSpotMarketPricesList) Set(val *SpotMarketPricesList) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotMarketPricesList) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotMarketPricesList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotMarketPricesList(val *SpotMarketPricesList) *NullableSpotMarketPricesList {
	return &NullableSpotMarketPricesList{value: val, isSet: true}
}

func (v NullableSpotMarketPricesList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotMarketPricesList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
