/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// IPReservationListIpAddressesInner struct for IPReservationListIpAddressesInner
type IPReservationListIpAddressesInner struct {
	IPReservation    *IPReservation
	VrfIpReservation *VrfIpReservation
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *IPReservationListIpAddressesInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into IPReservation
	err = json.Unmarshal(data, &dst.IPReservation)
	if err == nil {
		jsonIPReservation, _ := json.Marshal(dst.IPReservation)
		if string(jsonIPReservation) == "{}" { // empty struct
			dst.IPReservation = nil
		} else {
			return nil // data stored in dst.IPReservation, return on the first match
		}
	} else {
		dst.IPReservation = nil
	}

	// try to unmarshal JSON data into VrfIpReservation
	err = json.Unmarshal(data, &dst.VrfIpReservation)
	if err == nil {
		jsonVrfIpReservation, _ := json.Marshal(dst.VrfIpReservation)
		if string(jsonVrfIpReservation) == "{}" { // empty struct
			dst.VrfIpReservation = nil
		} else {
			return nil // data stored in dst.VrfIpReservation, return on the first match
		}
	} else {
		dst.VrfIpReservation = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(IPReservationListIpAddressesInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *IPReservationListIpAddressesInner) MarshalJSON() ([]byte, error) {
	if src.IPReservation != nil {
		return json.Marshal(&src.IPReservation)
	}

	if src.VrfIpReservation != nil {
		return json.Marshal(&src.VrfIpReservation)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableIPReservationListIpAddressesInner struct {
	value *IPReservationListIpAddressesInner
	isSet bool
}

func (v NullableIPReservationListIpAddressesInner) Get() *IPReservationListIpAddressesInner {
	return v.value
}

func (v *NullableIPReservationListIpAddressesInner) Set(val *IPReservationListIpAddressesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIPReservationListIpAddressesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIPReservationListIpAddressesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPReservationListIpAddressesInner(val *IPReservationListIpAddressesInner) *NullableIPReservationListIpAddressesInner {
	return &NullableIPReservationListIpAddressesInner{value: val, isSet: true}
}

func (v NullableIPReservationListIpAddressesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPReservationListIpAddressesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
