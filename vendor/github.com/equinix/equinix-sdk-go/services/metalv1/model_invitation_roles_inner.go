/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// InvitationRolesInner the model 'InvitationRolesInner'
type InvitationRolesInner string

// List of Invitation_roles_inner
const (
	INVITATIONROLESINNER_ADMIN                InvitationRolesInner = "admin"
	INVITATIONROLESINNER_BILLING              InvitationRolesInner = "billing"
	INVITATIONROLESINNER_COLLABORATOR         InvitationRolesInner = "collaborator"
	INVITATIONROLESINNER_LIMITED_COLLABORATOR InvitationRolesInner = "limited_collaborator"
)

// All allowed values of InvitationRolesInner enum
var AllowedInvitationRolesInnerEnumValues = []InvitationRolesInner{
	"admin",
	"billing",
	"collaborator",
	"limited_collaborator",
}

func (v *InvitationRolesInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := InvitationRolesInner(value)
	for _, existing := range AllowedInvitationRolesInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid InvitationRolesInner", value)
}

// NewInvitationRolesInnerFromValue returns a pointer to a valid InvitationRolesInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewInvitationRolesInnerFromValue(v string) (*InvitationRolesInner, error) {
	ev := InvitationRolesInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for InvitationRolesInner: valid values are %v", v, AllowedInvitationRolesInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v InvitationRolesInner) IsValid() bool {
	for _, existing := range AllowedInvitationRolesInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Invitation_roles_inner value
func (v InvitationRolesInner) Ptr() *InvitationRolesInner {
	return &v
}

type NullableInvitationRolesInner struct {
	value *InvitationRolesInner
	isSet bool
}

func (v NullableInvitationRolesInner) Get() *InvitationRolesInner {
	return v.value
}

func (v *NullableInvitationRolesInner) Set(val *InvitationRolesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInvitationRolesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInvitationRolesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvitationRolesInner(val *InvitationRolesInner) *NullableInvitationRolesInner {
	return &NullableInvitationRolesInner{value: val, isSet: true}
}

func (v NullableInvitationRolesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvitationRolesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
