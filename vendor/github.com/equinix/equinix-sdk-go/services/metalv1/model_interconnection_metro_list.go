/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the InterconnectionMetroList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterconnectionMetroList{}

// InterconnectionMetroList struct for InterconnectionMetroList
type InterconnectionMetroList struct {
	Metros               []InterconnectionMetroListMetrosInner `json:"metros,omitempty"`
	Meta                 *Meta                                 `json:"meta,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InterconnectionMetroList InterconnectionMetroList

// NewInterconnectionMetroList instantiates a new InterconnectionMetroList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterconnectionMetroList() *InterconnectionMetroList {
	this := InterconnectionMetroList{}
	return &this
}

// NewInterconnectionMetroListWithDefaults instantiates a new InterconnectionMetroList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterconnectionMetroListWithDefaults() *InterconnectionMetroList {
	this := InterconnectionMetroList{}
	return &this
}

// GetMetros returns the Metros field value if set, zero value otherwise.
func (o *InterconnectionMetroList) GetMetros() []InterconnectionMetroListMetrosInner {
	if o == nil || IsNil(o.Metros) {
		var ret []InterconnectionMetroListMetrosInner
		return ret
	}
	return o.Metros
}

// GetMetrosOk returns a tuple with the Metros field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroList) GetMetrosOk() ([]InterconnectionMetroListMetrosInner, bool) {
	if o == nil || IsNil(o.Metros) {
		return nil, false
	}
	return o.Metros, true
}

// HasMetros returns a boolean if a field has been set.
func (o *InterconnectionMetroList) HasMetros() bool {
	if o != nil && !IsNil(o.Metros) {
		return true
	}

	return false
}

// SetMetros gets a reference to the given []InterconnectionMetroListMetrosInner and assigns it to the Metros field.
func (o *InterconnectionMetroList) SetMetros(v []InterconnectionMetroListMetrosInner) {
	o.Metros = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *InterconnectionMetroList) GetMeta() Meta {
	if o == nil || IsNil(o.Meta) {
		var ret Meta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroList) GetMetaOk() (*Meta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *InterconnectionMetroList) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given Meta and assigns it to the Meta field.
func (o *InterconnectionMetroList) SetMeta(v Meta) {
	o.Meta = &v
}

func (o InterconnectionMetroList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterconnectionMetroList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metros) {
		toSerialize["metros"] = o.Metros
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InterconnectionMetroList) UnmarshalJSON(data []byte) (err error) {
	varInterconnectionMetroList := _InterconnectionMetroList{}

	err = json.Unmarshal(data, &varInterconnectionMetroList)

	if err != nil {
		return err
	}

	*o = InterconnectionMetroList(varInterconnectionMetroList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "metros")
		delete(additionalProperties, "meta")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInterconnectionMetroList struct {
	value *InterconnectionMetroList
	isSet bool
}

func (v NullableInterconnectionMetroList) Get() *InterconnectionMetroList {
	return v.value
}

func (v *NullableInterconnectionMetroList) Set(val *InterconnectionMetroList) {
	v.value = val
	v.isSet = true
}

func (v NullableInterconnectionMetroList) IsSet() bool {
	return v.isSet
}

func (v *NullableInterconnectionMetroList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterconnectionMetroList(val *InterconnectionMetroList) *NullableInterconnectionMetroList {
	return &NullableInterconnectionMetroList{value: val, isSet: true}
}

func (v NullableInterconnectionMetroList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterconnectionMetroList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
