/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"time"
)

// checks if the VlanVirtualCircuit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VlanVirtualCircuit{}

// VlanVirtualCircuit struct for VlanVirtualCircuit
type VlanVirtualCircuit struct {
	// True if the Virtual Circuit is being billed. Currently, only Virtual Circuits of Fabric VCs (Metal Billed) will be billed. Usage will start the first time the Virtual Circuit becomes active, and will not stop until it is deleted from Metal.
	Bill        *bool                              `json:"bill,omitempty"`
	BillType    NullableVlanVirtualCircuitBillType `json:"bill_type,omitempty"`
	Description *string                            `json:"description,omitempty"`
	Id          *string                            `json:"id,omitempty"`
	Name        *string                            `json:"name,omitempty"`
	NniVlan     *int32                             `json:"nni_vlan,omitempty"`
	Port        *InterconnectionPort               `json:"port,omitempty"`
	Project     *Project                           `json:"project,omitempty"`
	// For Virtual Circuits on shared and dedicated connections, this speed should match the one set on their Interconnection Ports. For Virtual Circuits on Fabric VCs (both Metal and Fabric Billed) that have found their corresponding Fabric connection, this is the actual speed of the interconnection that was configured when setting up the interconnection on the Fabric Portal. Details on Fabric VCs are included in the specification as a developer preview and is generally unavailable. Please contact our Support team for more details.
	Speed  *int64                    `json:"speed,omitempty"`
	Status *VlanVirtualCircuitStatus `json:"status,omitempty"`
	// This field is relevant if using the `shared_port_vlan_to_csp` interconnection type. Once activated on the CSP, this field should contain the resource name that the virtual circuit is connected to on the provider's end.
	ProviderConnectionId *string                 `json:"provider_connection_id,omitempty"`
	Tags                 []string                `json:"tags,omitempty"`
	Type                 *VlanVirtualCircuitType `json:"type,omitempty"`
	VirtualNetwork       *Href                   `json:"virtual_network,omitempty"`
	Vnid                 *int32                  `json:"vnid,omitempty"`
	CreatedAt            *time.Time              `json:"created_at,omitempty"`
	UpdatedAt            *time.Time              `json:"updated_at,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VlanVirtualCircuit VlanVirtualCircuit

// NewVlanVirtualCircuit instantiates a new VlanVirtualCircuit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVlanVirtualCircuit() *VlanVirtualCircuit {
	this := VlanVirtualCircuit{}
	var bill bool = false
	this.Bill = &bill
	return &this
}

// NewVlanVirtualCircuitWithDefaults instantiates a new VlanVirtualCircuit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVlanVirtualCircuitWithDefaults() *VlanVirtualCircuit {
	this := VlanVirtualCircuit{}
	var bill bool = false
	this.Bill = &bill
	return &this
}

// GetBill returns the Bill field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetBill() bool {
	if o == nil || IsNil(o.Bill) {
		var ret bool
		return ret
	}
	return *o.Bill
}

// GetBillOk returns a tuple with the Bill field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetBillOk() (*bool, bool) {
	if o == nil || IsNil(o.Bill) {
		return nil, false
	}
	return o.Bill, true
}

// HasBill returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasBill() bool {
	if o != nil && !IsNil(o.Bill) {
		return true
	}

	return false
}

// SetBill gets a reference to the given bool and assigns it to the Bill field.
func (o *VlanVirtualCircuit) SetBill(v bool) {
	o.Bill = &v
}

// GetBillType returns the BillType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VlanVirtualCircuit) GetBillType() VlanVirtualCircuitBillType {
	if o == nil || IsNil(o.BillType.Get()) {
		var ret VlanVirtualCircuitBillType
		return ret
	}
	return *o.BillType.Get()
}

// GetBillTypeOk returns a tuple with the BillType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VlanVirtualCircuit) GetBillTypeOk() (*VlanVirtualCircuitBillType, bool) {
	if o == nil {
		return nil, false
	}
	return o.BillType.Get(), o.BillType.IsSet()
}

// HasBillType returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasBillType() bool {
	if o != nil && o.BillType.IsSet() {
		return true
	}

	return false
}

// SetBillType gets a reference to the given NullableVlanVirtualCircuitBillType and assigns it to the BillType field.
func (o *VlanVirtualCircuit) SetBillType(v VlanVirtualCircuitBillType) {
	o.BillType.Set(&v)
}

// SetBillTypeNil sets the value for BillType to be an explicit nil
func (o *VlanVirtualCircuit) SetBillTypeNil() {
	o.BillType.Set(nil)
}

// UnsetBillType ensures that no value is present for BillType, not even an explicit nil
func (o *VlanVirtualCircuit) UnsetBillType() {
	o.BillType.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VlanVirtualCircuit) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VlanVirtualCircuit) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VlanVirtualCircuit) SetName(v string) {
	o.Name = &v
}

// GetNniVlan returns the NniVlan field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetNniVlan() int32 {
	if o == nil || IsNil(o.NniVlan) {
		var ret int32
		return ret
	}
	return *o.NniVlan
}

// GetNniVlanOk returns a tuple with the NniVlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetNniVlanOk() (*int32, bool) {
	if o == nil || IsNil(o.NniVlan) {
		return nil, false
	}
	return o.NniVlan, true
}

// HasNniVlan returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasNniVlan() bool {
	if o != nil && !IsNil(o.NniVlan) {
		return true
	}

	return false
}

// SetNniVlan gets a reference to the given int32 and assigns it to the NniVlan field.
func (o *VlanVirtualCircuit) SetNniVlan(v int32) {
	o.NniVlan = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetPort() InterconnectionPort {
	if o == nil || IsNil(o.Port) {
		var ret InterconnectionPort
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetPortOk() (*InterconnectionPort, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given InterconnectionPort and assigns it to the Port field.
func (o *VlanVirtualCircuit) SetPort(v InterconnectionPort) {
	o.Port = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetProject() Project {
	if o == nil || IsNil(o.Project) {
		var ret Project
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetProjectOk() (*Project, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given Project and assigns it to the Project field.
func (o *VlanVirtualCircuit) SetProject(v Project) {
	o.Project = &v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetSpeed() int64 {
	if o == nil || IsNil(o.Speed) {
		var ret int64
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetSpeedOk() (*int64, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given int64 and assigns it to the Speed field.
func (o *VlanVirtualCircuit) SetSpeed(v int64) {
	o.Speed = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetStatus() VlanVirtualCircuitStatus {
	if o == nil || IsNil(o.Status) {
		var ret VlanVirtualCircuitStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetStatusOk() (*VlanVirtualCircuitStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given VlanVirtualCircuitStatus and assigns it to the Status field.
func (o *VlanVirtualCircuit) SetStatus(v VlanVirtualCircuitStatus) {
	o.Status = &v
}

// GetProviderConnectionId returns the ProviderConnectionId field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetProviderConnectionId() string {
	if o == nil || IsNil(o.ProviderConnectionId) {
		var ret string
		return ret
	}
	return *o.ProviderConnectionId
}

// GetProviderConnectionIdOk returns a tuple with the ProviderConnectionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetProviderConnectionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderConnectionId) {
		return nil, false
	}
	return o.ProviderConnectionId, true
}

// HasProviderConnectionId returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasProviderConnectionId() bool {
	if o != nil && !IsNil(o.ProviderConnectionId) {
		return true
	}

	return false
}

// SetProviderConnectionId gets a reference to the given string and assigns it to the ProviderConnectionId field.
func (o *VlanVirtualCircuit) SetProviderConnectionId(v string) {
	o.ProviderConnectionId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *VlanVirtualCircuit) SetTags(v []string) {
	o.Tags = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetType() VlanVirtualCircuitType {
	if o == nil || IsNil(o.Type) {
		var ret VlanVirtualCircuitType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetTypeOk() (*VlanVirtualCircuitType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given VlanVirtualCircuitType and assigns it to the Type field.
func (o *VlanVirtualCircuit) SetType(v VlanVirtualCircuitType) {
	o.Type = &v
}

// GetVirtualNetwork returns the VirtualNetwork field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetVirtualNetwork() Href {
	if o == nil || IsNil(o.VirtualNetwork) {
		var ret Href
		return ret
	}
	return *o.VirtualNetwork
}

// GetVirtualNetworkOk returns a tuple with the VirtualNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetVirtualNetworkOk() (*Href, bool) {
	if o == nil || IsNil(o.VirtualNetwork) {
		return nil, false
	}
	return o.VirtualNetwork, true
}

// HasVirtualNetwork returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasVirtualNetwork() bool {
	if o != nil && !IsNil(o.VirtualNetwork) {
		return true
	}

	return false
}

// SetVirtualNetwork gets a reference to the given Href and assigns it to the VirtualNetwork field.
func (o *VlanVirtualCircuit) SetVirtualNetwork(v Href) {
	o.VirtualNetwork = &v
}

// GetVnid returns the Vnid field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetVnid() int32 {
	if o == nil || IsNil(o.Vnid) {
		var ret int32
		return ret
	}
	return *o.Vnid
}

// GetVnidOk returns a tuple with the Vnid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetVnidOk() (*int32, bool) {
	if o == nil || IsNil(o.Vnid) {
		return nil, false
	}
	return o.Vnid, true
}

// HasVnid returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasVnid() bool {
	if o != nil && !IsNil(o.Vnid) {
		return true
	}

	return false
}

// SetVnid gets a reference to the given int32 and assigns it to the Vnid field.
func (o *VlanVirtualCircuit) SetVnid(v int32) {
	o.Vnid = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *VlanVirtualCircuit) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VlanVirtualCircuit) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanVirtualCircuit) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VlanVirtualCircuit) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *VlanVirtualCircuit) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o VlanVirtualCircuit) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VlanVirtualCircuit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bill) {
		toSerialize["bill"] = o.Bill
	}
	if o.BillType.IsSet() {
		toSerialize["bill_type"] = o.BillType.Get()
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NniVlan) {
		toSerialize["nni_vlan"] = o.NniVlan
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ProviderConnectionId) {
		toSerialize["provider_connection_id"] = o.ProviderConnectionId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VirtualNetwork) {
		toSerialize["virtual_network"] = o.VirtualNetwork
	}
	if !IsNil(o.Vnid) {
		toSerialize["vnid"] = o.Vnid
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VlanVirtualCircuit) UnmarshalJSON(data []byte) (err error) {
	varVlanVirtualCircuit := _VlanVirtualCircuit{}

	err = json.Unmarshal(data, &varVlanVirtualCircuit)

	if err != nil {
		return err
	}

	*o = VlanVirtualCircuit(varVlanVirtualCircuit)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "bill")
		delete(additionalProperties, "bill_type")
		delete(additionalProperties, "description")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "nni_vlan")
		delete(additionalProperties, "port")
		delete(additionalProperties, "project")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "status")
		delete(additionalProperties, "provider_connection_id")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "type")
		delete(additionalProperties, "virtual_network")
		delete(additionalProperties, "vnid")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "updated_at")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVlanVirtualCircuit struct {
	value *VlanVirtualCircuit
	isSet bool
}

func (v NullableVlanVirtualCircuit) Get() *VlanVirtualCircuit {
	return v.value
}

func (v *NullableVlanVirtualCircuit) Set(val *VlanVirtualCircuit) {
	v.value = val
	v.isSet = true
}

func (v NullableVlanVirtualCircuit) IsSet() bool {
	return v.isSet
}

func (v *NullableVlanVirtualCircuit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVlanVirtualCircuit(val *VlanVirtualCircuit) *NullableVlanVirtualCircuit {
	return &NullableVlanVirtualCircuit{value: val, isSet: true}
}

func (v NullableVlanVirtualCircuit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVlanVirtualCircuit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
