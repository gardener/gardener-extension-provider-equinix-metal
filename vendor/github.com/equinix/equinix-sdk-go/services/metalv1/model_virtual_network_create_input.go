/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the VirtualNetworkCreateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualNetworkCreateInput{}

// VirtualNetworkCreateInput struct for VirtualNetworkCreateInput
type VirtualNetworkCreateInput struct {
	Description *string `json:"description,omitempty"`
	// The UUID (or facility code) for the Facility in which to create this Virtual network.
	// Deprecated
	Facility *string `json:"facility,omitempty"`
	// The UUID (or metro code) for the Metro in which to create this Virtual Network.
	Metro *string `json:"metro,omitempty"`
	// VLAN ID between 2-3999. Must be unique for the project within the Metro in which this Virtual Network is being created. If no value is specified, the next-available VLAN ID in the range 1000-1999 will be automatically selected.
	Vxlan                *int32   `json:"vxlan,omitempty"`
	Tags                 []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VirtualNetworkCreateInput VirtualNetworkCreateInput

// NewVirtualNetworkCreateInput instantiates a new VirtualNetworkCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualNetworkCreateInput() *VirtualNetworkCreateInput {
	this := VirtualNetworkCreateInput{}
	return &this
}

// NewVirtualNetworkCreateInputWithDefaults instantiates a new VirtualNetworkCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualNetworkCreateInputWithDefaults() *VirtualNetworkCreateInput {
	this := VirtualNetworkCreateInput{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VirtualNetworkCreateInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualNetworkCreateInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VirtualNetworkCreateInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VirtualNetworkCreateInput) SetDescription(v string) {
	o.Description = &v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
// Deprecated
func (o *VirtualNetworkCreateInput) GetFacility() string {
	if o == nil || IsNil(o.Facility) {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *VirtualNetworkCreateInput) GetFacilityOk() (*string, bool) {
	if o == nil || IsNil(o.Facility) {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *VirtualNetworkCreateInput) HasFacility() bool {
	if o != nil && !IsNil(o.Facility) {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
// Deprecated
func (o *VirtualNetworkCreateInput) SetFacility(v string) {
	o.Facility = &v
}

// GetMetro returns the Metro field value if set, zero value otherwise.
func (o *VirtualNetworkCreateInput) GetMetro() string {
	if o == nil || IsNil(o.Metro) {
		var ret string
		return ret
	}
	return *o.Metro
}

// GetMetroOk returns a tuple with the Metro field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualNetworkCreateInput) GetMetroOk() (*string, bool) {
	if o == nil || IsNil(o.Metro) {
		return nil, false
	}
	return o.Metro, true
}

// HasMetro returns a boolean if a field has been set.
func (o *VirtualNetworkCreateInput) HasMetro() bool {
	if o != nil && !IsNil(o.Metro) {
		return true
	}

	return false
}

// SetMetro gets a reference to the given string and assigns it to the Metro field.
func (o *VirtualNetworkCreateInput) SetMetro(v string) {
	o.Metro = &v
}

// GetVxlan returns the Vxlan field value if set, zero value otherwise.
func (o *VirtualNetworkCreateInput) GetVxlan() int32 {
	if o == nil || IsNil(o.Vxlan) {
		var ret int32
		return ret
	}
	return *o.Vxlan
}

// GetVxlanOk returns a tuple with the Vxlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualNetworkCreateInput) GetVxlanOk() (*int32, bool) {
	if o == nil || IsNil(o.Vxlan) {
		return nil, false
	}
	return o.Vxlan, true
}

// HasVxlan returns a boolean if a field has been set.
func (o *VirtualNetworkCreateInput) HasVxlan() bool {
	if o != nil && !IsNil(o.Vxlan) {
		return true
	}

	return false
}

// SetVxlan gets a reference to the given int32 and assigns it to the Vxlan field.
func (o *VirtualNetworkCreateInput) SetVxlan(v int32) {
	o.Vxlan = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VirtualNetworkCreateInput) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualNetworkCreateInput) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VirtualNetworkCreateInput) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *VirtualNetworkCreateInput) SetTags(v []string) {
	o.Tags = v
}

func (o VirtualNetworkCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualNetworkCreateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Facility) {
		toSerialize["facility"] = o.Facility
	}
	if !IsNil(o.Metro) {
		toSerialize["metro"] = o.Metro
	}
	if !IsNil(o.Vxlan) {
		toSerialize["vxlan"] = o.Vxlan
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VirtualNetworkCreateInput) UnmarshalJSON(data []byte) (err error) {
	varVirtualNetworkCreateInput := _VirtualNetworkCreateInput{}

	err = json.Unmarshal(data, &varVirtualNetworkCreateInput)

	if err != nil {
		return err
	}

	*o = VirtualNetworkCreateInput(varVirtualNetworkCreateInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "description")
		delete(additionalProperties, "facility")
		delete(additionalProperties, "metro")
		delete(additionalProperties, "vxlan")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVirtualNetworkCreateInput struct {
	value *VirtualNetworkCreateInput
	isSet bool
}

func (v NullableVirtualNetworkCreateInput) Get() *VirtualNetworkCreateInput {
	return v.value
}

func (v *NullableVirtualNetworkCreateInput) Set(val *VirtualNetworkCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualNetworkCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualNetworkCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualNetworkCreateInput(val *VirtualNetworkCreateInput) *NullableVirtualNetworkCreateInput {
	return &NullableVirtualNetworkCreateInput{value: val, isSet: true}
}

func (v NullableVirtualNetworkCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualNetworkCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
