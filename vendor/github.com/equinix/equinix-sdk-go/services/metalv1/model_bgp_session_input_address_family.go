/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// BGPSessionInputAddressFamily Address family for BGP session.
type BGPSessionInputAddressFamily string

// List of BGPSessionInput_address_family
const (
	BGPSESSIONINPUTADDRESSFAMILY_IPV4 BGPSessionInputAddressFamily = "ipv4"
	BGPSESSIONINPUTADDRESSFAMILY_IPV6 BGPSessionInputAddressFamily = "ipv6"
)

// All allowed values of BGPSessionInputAddressFamily enum
var AllowedBGPSessionInputAddressFamilyEnumValues = []BGPSessionInputAddressFamily{
	"ipv4",
	"ipv6",
}

func (v *BGPSessionInputAddressFamily) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BGPSessionInputAddressFamily(value)
	for _, existing := range AllowedBGPSessionInputAddressFamilyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BGPSessionInputAddressFamily", value)
}

// NewBGPSessionInputAddressFamilyFromValue returns a pointer to a valid BGPSessionInputAddressFamily
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBGPSessionInputAddressFamilyFromValue(v string) (*BGPSessionInputAddressFamily, error) {
	ev := BGPSessionInputAddressFamily(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BGPSessionInputAddressFamily: valid values are %v", v, AllowedBGPSessionInputAddressFamilyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BGPSessionInputAddressFamily) IsValid() bool {
	for _, existing := range AllowedBGPSessionInputAddressFamilyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BGPSessionInput_address_family value
func (v BGPSessionInputAddressFamily) Ptr() *BGPSessionInputAddressFamily {
	return &v
}

type NullableBGPSessionInputAddressFamily struct {
	value *BGPSessionInputAddressFamily
	isSet bool
}

func (v NullableBGPSessionInputAddressFamily) Get() *BGPSessionInputAddressFamily {
	return v.value
}

func (v *NullableBGPSessionInputAddressFamily) Set(val *BGPSessionInputAddressFamily) {
	v.value = val
	v.isSet = true
}

func (v NullableBGPSessionInputAddressFamily) IsSet() bool {
	return v.isSet
}

func (v *NullableBGPSessionInputAddressFamily) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGPSessionInputAddressFamily(val *BGPSessionInputAddressFamily) *NullableBGPSessionInputAddressFamily {
	return &NullableBGPSessionInputAddressFamily{value: val, isSet: true}
}

func (v NullableBGPSessionInputAddressFamily) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGPSessionInputAddressFamily) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
