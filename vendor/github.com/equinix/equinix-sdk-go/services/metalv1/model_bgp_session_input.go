/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the BGPSessionInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BGPSessionInput{}

// BGPSessionInput struct for BGPSessionInput
type BGPSessionInput struct {
	AddressFamily *BGPSessionInputAddressFamily `json:"address_family,omitempty"`
	// Set the default route policy.
	DefaultRoute         *bool `json:"default_route,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BGPSessionInput BGPSessionInput

// NewBGPSessionInput instantiates a new BGPSessionInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBGPSessionInput() *BGPSessionInput {
	this := BGPSessionInput{}
	var defaultRoute bool = false
	this.DefaultRoute = &defaultRoute
	return &this
}

// NewBGPSessionInputWithDefaults instantiates a new BGPSessionInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBGPSessionInputWithDefaults() *BGPSessionInput {
	this := BGPSessionInput{}
	var defaultRoute bool = false
	this.DefaultRoute = &defaultRoute
	return &this
}

// GetAddressFamily returns the AddressFamily field value if set, zero value otherwise.
func (o *BGPSessionInput) GetAddressFamily() BGPSessionInputAddressFamily {
	if o == nil || IsNil(o.AddressFamily) {
		var ret BGPSessionInputAddressFamily
		return ret
	}
	return *o.AddressFamily
}

// GetAddressFamilyOk returns a tuple with the AddressFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPSessionInput) GetAddressFamilyOk() (*BGPSessionInputAddressFamily, bool) {
	if o == nil || IsNil(o.AddressFamily) {
		return nil, false
	}
	return o.AddressFamily, true
}

// HasAddressFamily returns a boolean if a field has been set.
func (o *BGPSessionInput) HasAddressFamily() bool {
	if o != nil && !IsNil(o.AddressFamily) {
		return true
	}

	return false
}

// SetAddressFamily gets a reference to the given BGPSessionInputAddressFamily and assigns it to the AddressFamily field.
func (o *BGPSessionInput) SetAddressFamily(v BGPSessionInputAddressFamily) {
	o.AddressFamily = &v
}

// GetDefaultRoute returns the DefaultRoute field value if set, zero value otherwise.
func (o *BGPSessionInput) GetDefaultRoute() bool {
	if o == nil || IsNil(o.DefaultRoute) {
		var ret bool
		return ret
	}
	return *o.DefaultRoute
}

// GetDefaultRouteOk returns a tuple with the DefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BGPSessionInput) GetDefaultRouteOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultRoute) {
		return nil, false
	}
	return o.DefaultRoute, true
}

// HasDefaultRoute returns a boolean if a field has been set.
func (o *BGPSessionInput) HasDefaultRoute() bool {
	if o != nil && !IsNil(o.DefaultRoute) {
		return true
	}

	return false
}

// SetDefaultRoute gets a reference to the given bool and assigns it to the DefaultRoute field.
func (o *BGPSessionInput) SetDefaultRoute(v bool) {
	o.DefaultRoute = &v
}

func (o BGPSessionInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BGPSessionInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddressFamily) {
		toSerialize["address_family"] = o.AddressFamily
	}
	if !IsNil(o.DefaultRoute) {
		toSerialize["default_route"] = o.DefaultRoute
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BGPSessionInput) UnmarshalJSON(data []byte) (err error) {
	varBGPSessionInput := _BGPSessionInput{}

	err = json.Unmarshal(data, &varBGPSessionInput)

	if err != nil {
		return err
	}

	*o = BGPSessionInput(varBGPSessionInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address_family")
		delete(additionalProperties, "default_route")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBGPSessionInput struct {
	value *BGPSessionInput
	isSet bool
}

func (v NullableBGPSessionInput) Get() *BGPSessionInput {
	return v.value
}

func (v *NullableBGPSessionInput) Set(val *BGPSessionInput) {
	v.value = val
	v.isSet = true
}

func (v NullableBGPSessionInput) IsSet() bool {
	return v.isSet
}

func (v *NullableBGPSessionInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBGPSessionInput(val *BGPSessionInput) *NullableBGPSessionInput {
	return &NullableBGPSessionInput{value: val, isSet: true}
}

func (v NullableBGPSessionInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBGPSessionInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
