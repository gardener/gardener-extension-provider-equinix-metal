/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// DedicatedPortCreateInputType When requesting for a dedicated port, the value of this field should be 'dedicated'.
type DedicatedPortCreateInputType string

// List of DedicatedPortCreateInput_type
const (
	DEDICATEDPORTCREATEINPUTTYPE_DEDICATED DedicatedPortCreateInputType = "dedicated"
)

// All allowed values of DedicatedPortCreateInputType enum
var AllowedDedicatedPortCreateInputTypeEnumValues = []DedicatedPortCreateInputType{
	"dedicated",
}

func (v *DedicatedPortCreateInputType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DedicatedPortCreateInputType(value)
	for _, existing := range AllowedDedicatedPortCreateInputTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DedicatedPortCreateInputType", value)
}

// NewDedicatedPortCreateInputTypeFromValue returns a pointer to a valid DedicatedPortCreateInputType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDedicatedPortCreateInputTypeFromValue(v string) (*DedicatedPortCreateInputType, error) {
	ev := DedicatedPortCreateInputType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DedicatedPortCreateInputType: valid values are %v", v, AllowedDedicatedPortCreateInputTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DedicatedPortCreateInputType) IsValid() bool {
	for _, existing := range AllowedDedicatedPortCreateInputTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DedicatedPortCreateInput_type value
func (v DedicatedPortCreateInputType) Ptr() *DedicatedPortCreateInputType {
	return &v
}

type NullableDedicatedPortCreateInputType struct {
	value *DedicatedPortCreateInputType
	isSet bool
}

func (v NullableDedicatedPortCreateInputType) Get() *DedicatedPortCreateInputType {
	return v.value
}

func (v *NullableDedicatedPortCreateInputType) Set(val *DedicatedPortCreateInputType) {
	v.value = val
	v.isSet = true
}

func (v NullableDedicatedPortCreateInputType) IsSet() bool {
	return v.isSet
}

func (v *NullableDedicatedPortCreateInputType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDedicatedPortCreateInputType(val *DedicatedPortCreateInputType) *NullableDedicatedPortCreateInputType {
	return &NullableDedicatedPortCreateInputType{value: val, isSet: true}
}

func (v NullableDedicatedPortCreateInputType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDedicatedPortCreateInputType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
