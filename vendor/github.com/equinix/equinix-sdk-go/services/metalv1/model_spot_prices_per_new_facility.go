/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the SpotPricesPerNewFacility type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotPricesPerNewFacility{}

// SpotPricesPerNewFacility struct for SpotPricesPerNewFacility
type SpotPricesPerNewFacility struct {
	Baremetal1e          *SpotPricesPerBaremetal `json:"baremetal_1e,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpotPricesPerNewFacility SpotPricesPerNewFacility

// NewSpotPricesPerNewFacility instantiates a new SpotPricesPerNewFacility object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotPricesPerNewFacility() *SpotPricesPerNewFacility {
	this := SpotPricesPerNewFacility{}
	return &this
}

// NewSpotPricesPerNewFacilityWithDefaults instantiates a new SpotPricesPerNewFacility object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotPricesPerNewFacilityWithDefaults() *SpotPricesPerNewFacility {
	this := SpotPricesPerNewFacility{}
	return &this
}

// GetBaremetal1e returns the Baremetal1e field value if set, zero value otherwise.
func (o *SpotPricesPerNewFacility) GetBaremetal1e() SpotPricesPerBaremetal {
	if o == nil || IsNil(o.Baremetal1e) {
		var ret SpotPricesPerBaremetal
		return ret
	}
	return *o.Baremetal1e
}

// GetBaremetal1eOk returns a tuple with the Baremetal1e field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesPerNewFacility) GetBaremetal1eOk() (*SpotPricesPerBaremetal, bool) {
	if o == nil || IsNil(o.Baremetal1e) {
		return nil, false
	}
	return o.Baremetal1e, true
}

// HasBaremetal1e returns a boolean if a field has been set.
func (o *SpotPricesPerNewFacility) HasBaremetal1e() bool {
	if o != nil && !IsNil(o.Baremetal1e) {
		return true
	}

	return false
}

// SetBaremetal1e gets a reference to the given SpotPricesPerBaremetal and assigns it to the Baremetal1e field.
func (o *SpotPricesPerNewFacility) SetBaremetal1e(v SpotPricesPerBaremetal) {
	o.Baremetal1e = &v
}

func (o SpotPricesPerNewFacility) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotPricesPerNewFacility) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Baremetal1e) {
		toSerialize["baremetal_1e"] = o.Baremetal1e
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpotPricesPerNewFacility) UnmarshalJSON(data []byte) (err error) {
	varSpotPricesPerNewFacility := _SpotPricesPerNewFacility{}

	err = json.Unmarshal(data, &varSpotPricesPerNewFacility)

	if err != nil {
		return err
	}

	*o = SpotPricesPerNewFacility(varSpotPricesPerNewFacility)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "baremetal_1e")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpotPricesPerNewFacility struct {
	value *SpotPricesPerNewFacility
	isSet bool
}

func (v NullableSpotPricesPerNewFacility) Get() *SpotPricesPerNewFacility {
	return v.value
}

func (v *NullableSpotPricesPerNewFacility) Set(val *SpotPricesPerNewFacility) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotPricesPerNewFacility) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotPricesPerNewFacility) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotPricesPerNewFacility(val *SpotPricesPerNewFacility) *NullableSpotPricesPerNewFacility {
	return &NullableSpotPricesPerNewFacility{value: val, isSet: true}
}

func (v NullableSpotPricesPerNewFacility) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotPricesPerNewFacility) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
