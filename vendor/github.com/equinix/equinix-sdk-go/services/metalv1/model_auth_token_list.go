/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the AuthTokenList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthTokenList{}

// AuthTokenList struct for AuthTokenList
type AuthTokenList struct {
	ApiKeys              []AuthToken `json:"api_keys,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthTokenList AuthTokenList

// NewAuthTokenList instantiates a new AuthTokenList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthTokenList() *AuthTokenList {
	this := AuthTokenList{}
	return &this
}

// NewAuthTokenListWithDefaults instantiates a new AuthTokenList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthTokenListWithDefaults() *AuthTokenList {
	this := AuthTokenList{}
	return &this
}

// GetApiKeys returns the ApiKeys field value if set, zero value otherwise.
func (o *AuthTokenList) GetApiKeys() []AuthToken {
	if o == nil || IsNil(o.ApiKeys) {
		var ret []AuthToken
		return ret
	}
	return o.ApiKeys
}

// GetApiKeysOk returns a tuple with the ApiKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenList) GetApiKeysOk() ([]AuthToken, bool) {
	if o == nil || IsNil(o.ApiKeys) {
		return nil, false
	}
	return o.ApiKeys, true
}

// HasApiKeys returns a boolean if a field has been set.
func (o *AuthTokenList) HasApiKeys() bool {
	if o != nil && !IsNil(o.ApiKeys) {
		return true
	}

	return false
}

// SetApiKeys gets a reference to the given []AuthToken and assigns it to the ApiKeys field.
func (o *AuthTokenList) SetApiKeys(v []AuthToken) {
	o.ApiKeys = v
}

func (o AuthTokenList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthTokenList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKeys) {
		toSerialize["api_keys"] = o.ApiKeys
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthTokenList) UnmarshalJSON(data []byte) (err error) {
	varAuthTokenList := _AuthTokenList{}

	err = json.Unmarshal(data, &varAuthTokenList)

	if err != nil {
		return err
	}

	*o = AuthTokenList(varAuthTokenList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "api_keys")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthTokenList struct {
	value *AuthTokenList
	isSet bool
}

func (v NullableAuthTokenList) Get() *AuthTokenList {
	return v.value
}

func (v *NullableAuthTokenList) Set(val *AuthTokenList) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthTokenList) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthTokenList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthTokenList(val *AuthTokenList) *NullableAuthTokenList {
	return &NullableAuthTokenList{value: val, isSet: true}
}

func (v NullableAuthTokenList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthTokenList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
