/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// BgpConfigDeploymentType In a Local BGP deployment, a customer uses an internal ASN to control routes within a single Equinix Metal datacenter. This means that the routes are never advertised to the global Internet. Global BGP, on the other hand, requires a customer to have a registered ASN and IP space.
type BgpConfigDeploymentType string

// List of BgpConfig_deployment_type
const (
	BGPCONFIGDEPLOYMENTTYPE_GLOBAL BgpConfigDeploymentType = "global"
	BGPCONFIGDEPLOYMENTTYPE_LOCAL  BgpConfigDeploymentType = "local"
)

// All allowed values of BgpConfigDeploymentType enum
var AllowedBgpConfigDeploymentTypeEnumValues = []BgpConfigDeploymentType{
	"global",
	"local",
}

func (v *BgpConfigDeploymentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BgpConfigDeploymentType(value)
	for _, existing := range AllowedBgpConfigDeploymentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BgpConfigDeploymentType", value)
}

// NewBgpConfigDeploymentTypeFromValue returns a pointer to a valid BgpConfigDeploymentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBgpConfigDeploymentTypeFromValue(v string) (*BgpConfigDeploymentType, error) {
	ev := BgpConfigDeploymentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BgpConfigDeploymentType: valid values are %v", v, AllowedBgpConfigDeploymentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BgpConfigDeploymentType) IsValid() bool {
	for _, existing := range AllowedBgpConfigDeploymentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BgpConfig_deployment_type value
func (v BgpConfigDeploymentType) Ptr() *BgpConfigDeploymentType {
	return &v
}

type NullableBgpConfigDeploymentType struct {
	value *BgpConfigDeploymentType
	isSet bool
}

func (v NullableBgpConfigDeploymentType) Get() *BgpConfigDeploymentType {
	return v.value
}

func (v *NullableBgpConfigDeploymentType) Set(val *BgpConfigDeploymentType) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpConfigDeploymentType) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpConfigDeploymentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpConfigDeploymentType(val *BgpConfigDeploymentType) *NullableBgpConfigDeploymentType {
	return &NullableBgpConfigDeploymentType{value: val, isSet: true}
}

func (v NullableBgpConfigDeploymentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpConfigDeploymentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
