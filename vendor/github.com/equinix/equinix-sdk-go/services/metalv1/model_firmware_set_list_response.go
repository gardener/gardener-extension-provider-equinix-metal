/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the FirmwareSetListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirmwareSetListResponse{}

// FirmwareSetListResponse Represents collection of Firmware Sets
type FirmwareSetListResponse struct {
	// Max number of items returned in a page
	PageSize *int32 `json:"page_size,omitempty"`
	// Page returned
	Page *int32 `json:"page,omitempty"`
	// Items returned in current page
	PageCount *int32 `json:"page_count,omitempty"`
	// Total count of pages
	TotalPages *int32 `json:"total_pages,omitempty"`
	// Total count of items
	TotalRecordCount *int32 `json:"total_record_count,omitempty"`
	// Represents a list of FirmwareSets
	Records              []FirmwareSet `json:"records,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FirmwareSetListResponse FirmwareSetListResponse

// NewFirmwareSetListResponse instantiates a new FirmwareSetListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirmwareSetListResponse() *FirmwareSetListResponse {
	this := FirmwareSetListResponse{}
	return &this
}

// NewFirmwareSetListResponseWithDefaults instantiates a new FirmwareSetListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirmwareSetListResponseWithDefaults() *FirmwareSetListResponse {
	this := FirmwareSetListResponse{}
	return &this
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *FirmwareSetListResponse) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareSetListResponse) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *FirmwareSetListResponse) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *FirmwareSetListResponse) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *FirmwareSetListResponse) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareSetListResponse) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *FirmwareSetListResponse) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *FirmwareSetListResponse) SetPage(v int32) {
	o.Page = &v
}

// GetPageCount returns the PageCount field value if set, zero value otherwise.
func (o *FirmwareSetListResponse) GetPageCount() int32 {
	if o == nil || IsNil(o.PageCount) {
		var ret int32
		return ret
	}
	return *o.PageCount
}

// GetPageCountOk returns a tuple with the PageCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareSetListResponse) GetPageCountOk() (*int32, bool) {
	if o == nil || IsNil(o.PageCount) {
		return nil, false
	}
	return o.PageCount, true
}

// HasPageCount returns a boolean if a field has been set.
func (o *FirmwareSetListResponse) HasPageCount() bool {
	if o != nil && !IsNil(o.PageCount) {
		return true
	}

	return false
}

// SetPageCount gets a reference to the given int32 and assigns it to the PageCount field.
func (o *FirmwareSetListResponse) SetPageCount(v int32) {
	o.PageCount = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *FirmwareSetListResponse) GetTotalPages() int32 {
	if o == nil || IsNil(o.TotalPages) {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareSetListResponse) GetTotalPagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPages) {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *FirmwareSetListResponse) HasTotalPages() bool {
	if o != nil && !IsNil(o.TotalPages) {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *FirmwareSetListResponse) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetTotalRecordCount returns the TotalRecordCount field value if set, zero value otherwise.
func (o *FirmwareSetListResponse) GetTotalRecordCount() int32 {
	if o == nil || IsNil(o.TotalRecordCount) {
		var ret int32
		return ret
	}
	return *o.TotalRecordCount
}

// GetTotalRecordCountOk returns a tuple with the TotalRecordCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareSetListResponse) GetTotalRecordCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRecordCount) {
		return nil, false
	}
	return o.TotalRecordCount, true
}

// HasTotalRecordCount returns a boolean if a field has been set.
func (o *FirmwareSetListResponse) HasTotalRecordCount() bool {
	if o != nil && !IsNil(o.TotalRecordCount) {
		return true
	}

	return false
}

// SetTotalRecordCount gets a reference to the given int32 and assigns it to the TotalRecordCount field.
func (o *FirmwareSetListResponse) SetTotalRecordCount(v int32) {
	o.TotalRecordCount = &v
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *FirmwareSetListResponse) GetRecords() []FirmwareSet {
	if o == nil || IsNil(o.Records) {
		var ret []FirmwareSet
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareSetListResponse) GetRecordsOk() ([]FirmwareSet, bool) {
	if o == nil || IsNil(o.Records) {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *FirmwareSetListResponse) HasRecords() bool {
	if o != nil && !IsNil(o.Records) {
		return true
	}

	return false
}

// SetRecords gets a reference to the given []FirmwareSet and assigns it to the Records field.
func (o *FirmwareSetListResponse) SetRecords(v []FirmwareSet) {
	o.Records = v
}

func (o FirmwareSetListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirmwareSetListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PageCount) {
		toSerialize["page_count"] = o.PageCount
	}
	if !IsNil(o.TotalPages) {
		toSerialize["total_pages"] = o.TotalPages
	}
	if !IsNil(o.TotalRecordCount) {
		toSerialize["total_record_count"] = o.TotalRecordCount
	}
	if !IsNil(o.Records) {
		toSerialize["records"] = o.Records
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FirmwareSetListResponse) UnmarshalJSON(data []byte) (err error) {
	varFirmwareSetListResponse := _FirmwareSetListResponse{}

	err = json.Unmarshal(data, &varFirmwareSetListResponse)

	if err != nil {
		return err
	}

	*o = FirmwareSetListResponse(varFirmwareSetListResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "page_size")
		delete(additionalProperties, "page")
		delete(additionalProperties, "page_count")
		delete(additionalProperties, "total_pages")
		delete(additionalProperties, "total_record_count")
		delete(additionalProperties, "records")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFirmwareSetListResponse struct {
	value *FirmwareSetListResponse
	isSet bool
}

func (v NullableFirmwareSetListResponse) Get() *FirmwareSetListResponse {
	return v.value
}

func (v *NullableFirmwareSetListResponse) Set(val *FirmwareSetListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFirmwareSetListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFirmwareSetListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirmwareSetListResponse(val *FirmwareSetListResponse) *NullableFirmwareSetListResponse {
	return &NullableFirmwareSetListResponse{value: val, isSet: true}
}

func (v NullableFirmwareSetListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirmwareSetListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
