/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// VlanCSPConnectionCreateInputFabricProvider - Configuration information for connecting to external cloud service provider.
type VlanCSPConnectionCreateInputFabricProvider struct {
	AWSFabricProvider *AWSFabricProvider
}

// AWSFabricProviderAsVlanCSPConnectionCreateInputFabricProvider is a convenience function that returns AWSFabricProvider wrapped in VlanCSPConnectionCreateInputFabricProvider
func AWSFabricProviderAsVlanCSPConnectionCreateInputFabricProvider(v *AWSFabricProvider) VlanCSPConnectionCreateInputFabricProvider {
	return VlanCSPConnectionCreateInputFabricProvider{
		AWSFabricProvider: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *VlanCSPConnectionCreateInputFabricProvider) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AWSFabricProvider
	err = newStrictDecoder(data).Decode(&dst.AWSFabricProvider)
	if err == nil {
		jsonAWSFabricProvider, _ := json.Marshal(dst.AWSFabricProvider)
		if string(jsonAWSFabricProvider) == "{}" { // empty struct
			dst.AWSFabricProvider = nil
		} else {
			match++
		}
	} else {
		dst.AWSFabricProvider = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AWSFabricProvider = nil

		return fmt.Errorf("data matches more than one schema in oneOf(VlanCSPConnectionCreateInputFabricProvider)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(VlanCSPConnectionCreateInputFabricProvider)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src VlanCSPConnectionCreateInputFabricProvider) MarshalJSON() ([]byte, error) {
	if src.AWSFabricProvider != nil {
		return json.Marshal(&src.AWSFabricProvider)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *VlanCSPConnectionCreateInputFabricProvider) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AWSFabricProvider != nil {
		return obj.AWSFabricProvider
	}

	// all schemas are nil
	return nil
}

type NullableVlanCSPConnectionCreateInputFabricProvider struct {
	value *VlanCSPConnectionCreateInputFabricProvider
	isSet bool
}

func (v NullableVlanCSPConnectionCreateInputFabricProvider) Get() *VlanCSPConnectionCreateInputFabricProvider {
	return v.value
}

func (v *NullableVlanCSPConnectionCreateInputFabricProvider) Set(val *VlanCSPConnectionCreateInputFabricProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableVlanCSPConnectionCreateInputFabricProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableVlanCSPConnectionCreateInputFabricProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVlanCSPConnectionCreateInputFabricProvider(val *VlanCSPConnectionCreateInputFabricProvider) *NullableVlanCSPConnectionCreateInputFabricProvider {
	return &NullableVlanCSPConnectionCreateInputFabricProvider{value: val, isSet: true}
}

func (v NullableVlanCSPConnectionCreateInputFabricProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVlanCSPConnectionCreateInputFabricProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
