/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the SpotMarketPricesPerMetroList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotMarketPricesPerMetroList{}

// SpotMarketPricesPerMetroList struct for SpotMarketPricesPerMetroList
type SpotMarketPricesPerMetroList struct {
	SpotMarketPrices     *SpotMarketPricesPerMetroReport `json:"spot_market_prices,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpotMarketPricesPerMetroList SpotMarketPricesPerMetroList

// NewSpotMarketPricesPerMetroList instantiates a new SpotMarketPricesPerMetroList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotMarketPricesPerMetroList() *SpotMarketPricesPerMetroList {
	this := SpotMarketPricesPerMetroList{}
	return &this
}

// NewSpotMarketPricesPerMetroListWithDefaults instantiates a new SpotMarketPricesPerMetroList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotMarketPricesPerMetroListWithDefaults() *SpotMarketPricesPerMetroList {
	this := SpotMarketPricesPerMetroList{}
	return &this
}

// GetSpotMarketPrices returns the SpotMarketPrices field value if set, zero value otherwise.
func (o *SpotMarketPricesPerMetroList) GetSpotMarketPrices() SpotMarketPricesPerMetroReport {
	if o == nil || IsNil(o.SpotMarketPrices) {
		var ret SpotMarketPricesPerMetroReport
		return ret
	}
	return *o.SpotMarketPrices
}

// GetSpotMarketPricesOk returns a tuple with the SpotMarketPrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotMarketPricesPerMetroList) GetSpotMarketPricesOk() (*SpotMarketPricesPerMetroReport, bool) {
	if o == nil || IsNil(o.SpotMarketPrices) {
		return nil, false
	}
	return o.SpotMarketPrices, true
}

// HasSpotMarketPrices returns a boolean if a field has been set.
func (o *SpotMarketPricesPerMetroList) HasSpotMarketPrices() bool {
	if o != nil && !IsNil(o.SpotMarketPrices) {
		return true
	}

	return false
}

// SetSpotMarketPrices gets a reference to the given SpotMarketPricesPerMetroReport and assigns it to the SpotMarketPrices field.
func (o *SpotMarketPricesPerMetroList) SetSpotMarketPrices(v SpotMarketPricesPerMetroReport) {
	o.SpotMarketPrices = &v
}

func (o SpotMarketPricesPerMetroList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotMarketPricesPerMetroList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpotMarketPrices) {
		toSerialize["spot_market_prices"] = o.SpotMarketPrices
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpotMarketPricesPerMetroList) UnmarshalJSON(data []byte) (err error) {
	varSpotMarketPricesPerMetroList := _SpotMarketPricesPerMetroList{}

	err = json.Unmarshal(data, &varSpotMarketPricesPerMetroList)

	if err != nil {
		return err
	}

	*o = SpotMarketPricesPerMetroList(varSpotMarketPricesPerMetroList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "spot_market_prices")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpotMarketPricesPerMetroList struct {
	value *SpotMarketPricesPerMetroList
	isSet bool
}

func (v NullableSpotMarketPricesPerMetroList) Get() *SpotMarketPricesPerMetroList {
	return v.value
}

func (v *NullableSpotMarketPricesPerMetroList) Set(val *SpotMarketPricesPerMetroList) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotMarketPricesPerMetroList) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotMarketPricesPerMetroList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotMarketPricesPerMetroList(val *SpotMarketPricesPerMetroList) *NullableSpotMarketPricesPerMetroList {
	return &NullableSpotMarketPricesPerMetroList{value: val, isSet: true}
}

func (v NullableSpotMarketPricesPerMetroList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotMarketPricesPerMetroList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
