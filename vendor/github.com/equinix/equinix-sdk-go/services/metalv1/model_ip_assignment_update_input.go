/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the IPAssignmentUpdateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IPAssignmentUpdateInput{}

// IPAssignmentUpdateInput struct for IPAssignmentUpdateInput
type IPAssignmentUpdateInput struct {
	Details              *string                `json:"details,omitempty"`
	Customdata           map[string]interface{} `json:"customdata,omitempty"`
	Tags                 []string               `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IPAssignmentUpdateInput IPAssignmentUpdateInput

// NewIPAssignmentUpdateInput instantiates a new IPAssignmentUpdateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIPAssignmentUpdateInput() *IPAssignmentUpdateInput {
	this := IPAssignmentUpdateInput{}
	return &this
}

// NewIPAssignmentUpdateInputWithDefaults instantiates a new IPAssignmentUpdateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIPAssignmentUpdateInputWithDefaults() *IPAssignmentUpdateInput {
	this := IPAssignmentUpdateInput{}
	return &this
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *IPAssignmentUpdateInput) GetDetails() string {
	if o == nil || IsNil(o.Details) {
		var ret string
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignmentUpdateInput) GetDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *IPAssignmentUpdateInput) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given string and assigns it to the Details field.
func (o *IPAssignmentUpdateInput) SetDetails(v string) {
	o.Details = &v
}

// GetCustomdata returns the Customdata field value if set, zero value otherwise.
func (o *IPAssignmentUpdateInput) GetCustomdata() map[string]interface{} {
	if o == nil || IsNil(o.Customdata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Customdata
}

// GetCustomdataOk returns a tuple with the Customdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignmentUpdateInput) GetCustomdataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Customdata) {
		return map[string]interface{}{}, false
	}
	return o.Customdata, true
}

// HasCustomdata returns a boolean if a field has been set.
func (o *IPAssignmentUpdateInput) HasCustomdata() bool {
	if o != nil && !IsNil(o.Customdata) {
		return true
	}

	return false
}

// SetCustomdata gets a reference to the given map[string]interface{} and assigns it to the Customdata field.
func (o *IPAssignmentUpdateInput) SetCustomdata(v map[string]interface{}) {
	o.Customdata = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *IPAssignmentUpdateInput) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IPAssignmentUpdateInput) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *IPAssignmentUpdateInput) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *IPAssignmentUpdateInput) SetTags(v []string) {
	o.Tags = v
}

func (o IPAssignmentUpdateInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IPAssignmentUpdateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	if !IsNil(o.Customdata) {
		toSerialize["customdata"] = o.Customdata
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IPAssignmentUpdateInput) UnmarshalJSON(data []byte) (err error) {
	varIPAssignmentUpdateInput := _IPAssignmentUpdateInput{}

	err = json.Unmarshal(data, &varIPAssignmentUpdateInput)

	if err != nil {
		return err
	}

	*o = IPAssignmentUpdateInput(varIPAssignmentUpdateInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "details")
		delete(additionalProperties, "customdata")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIPAssignmentUpdateInput struct {
	value *IPAssignmentUpdateInput
	isSet bool
}

func (v NullableIPAssignmentUpdateInput) Get() *IPAssignmentUpdateInput {
	return v.value
}

func (v *NullableIPAssignmentUpdateInput) Set(val *IPAssignmentUpdateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableIPAssignmentUpdateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableIPAssignmentUpdateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIPAssignmentUpdateInput(val *IPAssignmentUpdateInput) *NullableIPAssignmentUpdateInput {
	return &NullableIPAssignmentUpdateInput{value: val, isSet: true}
}

func (v NullableIPAssignmentUpdateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIPAssignmentUpdateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
