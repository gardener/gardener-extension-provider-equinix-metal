/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the PortVlanAssignmentList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortVlanAssignmentList{}

// PortVlanAssignmentList struct for PortVlanAssignmentList
type PortVlanAssignmentList struct {
	VlanAssignments      []PortVlanAssignment `json:"vlan_assignments,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PortVlanAssignmentList PortVlanAssignmentList

// NewPortVlanAssignmentList instantiates a new PortVlanAssignmentList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortVlanAssignmentList() *PortVlanAssignmentList {
	this := PortVlanAssignmentList{}
	return &this
}

// NewPortVlanAssignmentListWithDefaults instantiates a new PortVlanAssignmentList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortVlanAssignmentListWithDefaults() *PortVlanAssignmentList {
	this := PortVlanAssignmentList{}
	return &this
}

// GetVlanAssignments returns the VlanAssignments field value if set, zero value otherwise.
func (o *PortVlanAssignmentList) GetVlanAssignments() []PortVlanAssignment {
	if o == nil || IsNil(o.VlanAssignments) {
		var ret []PortVlanAssignment
		return ret
	}
	return o.VlanAssignments
}

// GetVlanAssignmentsOk returns a tuple with the VlanAssignments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortVlanAssignmentList) GetVlanAssignmentsOk() ([]PortVlanAssignment, bool) {
	if o == nil || IsNil(o.VlanAssignments) {
		return nil, false
	}
	return o.VlanAssignments, true
}

// HasVlanAssignments returns a boolean if a field has been set.
func (o *PortVlanAssignmentList) HasVlanAssignments() bool {
	if o != nil && !IsNil(o.VlanAssignments) {
		return true
	}

	return false
}

// SetVlanAssignments gets a reference to the given []PortVlanAssignment and assigns it to the VlanAssignments field.
func (o *PortVlanAssignmentList) SetVlanAssignments(v []PortVlanAssignment) {
	o.VlanAssignments = v
}

func (o PortVlanAssignmentList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortVlanAssignmentList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VlanAssignments) {
		toSerialize["vlan_assignments"] = o.VlanAssignments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PortVlanAssignmentList) UnmarshalJSON(data []byte) (err error) {
	varPortVlanAssignmentList := _PortVlanAssignmentList{}

	err = json.Unmarshal(data, &varPortVlanAssignmentList)

	if err != nil {
		return err
	}

	*o = PortVlanAssignmentList(varPortVlanAssignmentList)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "vlan_assignments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePortVlanAssignmentList struct {
	value *PortVlanAssignmentList
	isSet bool
}

func (v NullablePortVlanAssignmentList) Get() *PortVlanAssignmentList {
	return v.value
}

func (v *NullablePortVlanAssignmentList) Set(val *PortVlanAssignmentList) {
	v.value = val
	v.isSet = true
}

func (v NullablePortVlanAssignmentList) IsSet() bool {
	return v.isSet
}

func (v *NullablePortVlanAssignmentList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortVlanAssignmentList(val *PortVlanAssignmentList) *NullablePortVlanAssignmentList {
	return &NullablePortVlanAssignmentList{value: val, isSet: true}
}

func (v NullablePortVlanAssignmentList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortVlanAssignmentList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
