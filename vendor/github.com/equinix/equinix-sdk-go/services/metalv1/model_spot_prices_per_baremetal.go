/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the SpotPricesPerBaremetal type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotPricesPerBaremetal{}

// SpotPricesPerBaremetal struct for SpotPricesPerBaremetal
type SpotPricesPerBaremetal struct {
	Price                *float32 `json:"price,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpotPricesPerBaremetal SpotPricesPerBaremetal

// NewSpotPricesPerBaremetal instantiates a new SpotPricesPerBaremetal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotPricesPerBaremetal() *SpotPricesPerBaremetal {
	this := SpotPricesPerBaremetal{}
	return &this
}

// NewSpotPricesPerBaremetalWithDefaults instantiates a new SpotPricesPerBaremetal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotPricesPerBaremetalWithDefaults() *SpotPricesPerBaremetal {
	this := SpotPricesPerBaremetal{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *SpotPricesPerBaremetal) GetPrice() float32 {
	if o == nil || IsNil(o.Price) {
		var ret float32
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotPricesPerBaremetal) GetPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *SpotPricesPerBaremetal) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float32 and assigns it to the Price field.
func (o *SpotPricesPerBaremetal) SetPrice(v float32) {
	o.Price = &v
}

func (o SpotPricesPerBaremetal) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotPricesPerBaremetal) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpotPricesPerBaremetal) UnmarshalJSON(data []byte) (err error) {
	varSpotPricesPerBaremetal := _SpotPricesPerBaremetal{}

	err = json.Unmarshal(data, &varSpotPricesPerBaremetal)

	if err != nil {
		return err
	}

	*o = SpotPricesPerBaremetal(varSpotPricesPerBaremetal)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "price")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpotPricesPerBaremetal struct {
	value *SpotPricesPerBaremetal
	isSet bool
}

func (v NullableSpotPricesPerBaremetal) Get() *SpotPricesPerBaremetal {
	return v.value
}

func (v *NullableSpotPricesPerBaremetal) Set(val *SpotPricesPerBaremetal) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotPricesPerBaremetal) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotPricesPerBaremetal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotPricesPerBaremetal(val *SpotPricesPerBaremetal) *NullableSpotPricesPerBaremetal {
	return &NullableSpotPricesPerBaremetal{value: val, isSet: true}
}

func (v NullableSpotPricesPerBaremetal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotPricesPerBaremetal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
