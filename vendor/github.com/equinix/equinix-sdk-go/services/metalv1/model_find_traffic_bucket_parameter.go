/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// FindTrafficBucketParameter the model 'FindTrafficBucketParameter'
type FindTrafficBucketParameter string

// List of findTraffic_bucket_parameter
const (
	FINDTRAFFICBUCKETPARAMETER_INTERNAL FindTrafficBucketParameter = "internal"
	FINDTRAFFICBUCKETPARAMETER_EXTERNAL FindTrafficBucketParameter = "external"
)

// All allowed values of FindTrafficBucketParameter enum
var AllowedFindTrafficBucketParameterEnumValues = []FindTrafficBucketParameter{
	"internal",
	"external",
}

func (v *FindTrafficBucketParameter) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FindTrafficBucketParameter(value)
	for _, existing := range AllowedFindTrafficBucketParameterEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FindTrafficBucketParameter", value)
}

// NewFindTrafficBucketParameterFromValue returns a pointer to a valid FindTrafficBucketParameter
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFindTrafficBucketParameterFromValue(v string) (*FindTrafficBucketParameter, error) {
	ev := FindTrafficBucketParameter(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FindTrafficBucketParameter: valid values are %v", v, AllowedFindTrafficBucketParameterEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FindTrafficBucketParameter) IsValid() bool {
	for _, existing := range AllowedFindTrafficBucketParameterEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to findTraffic_bucket_parameter value
func (v FindTrafficBucketParameter) Ptr() *FindTrafficBucketParameter {
	return &v
}

type NullableFindTrafficBucketParameter struct {
	value *FindTrafficBucketParameter
	isSet bool
}

func (v NullableFindTrafficBucketParameter) Get() *FindTrafficBucketParameter {
	return v.value
}

func (v *NullableFindTrafficBucketParameter) Set(val *FindTrafficBucketParameter) {
	v.value = val
	v.isSet = true
}

func (v NullableFindTrafficBucketParameter) IsSet() bool {
	return v.isSet
}

func (v *NullableFindTrafficBucketParameter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFindTrafficBucketParameter(val *FindTrafficBucketParameter) *NullableFindTrafficBucketParameter {
	return &NullableFindTrafficBucketParameter{value: val, isSet: true}
}

func (v NullableFindTrafficBucketParameter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFindTrafficBucketParameter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
