/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// FacilityFeaturesInner the model 'FacilityFeaturesInner'
type FacilityFeaturesInner string

// List of Facility_features_inner
const (
	FACILITYFEATURESINNER_BAREMETAL        FacilityFeaturesInner = "baremetal"
	FACILITYFEATURESINNER_BACKEND_TRANSFER FacilityFeaturesInner = "backend_transfer"
	FACILITYFEATURESINNER_LAYER_2          FacilityFeaturesInner = "layer_2"
	FACILITYFEATURESINNER_GLOBAL_IPV4      FacilityFeaturesInner = "global_ipv4"
	FACILITYFEATURESINNER_IBX              FacilityFeaturesInner = "ibx"
)

// All allowed values of FacilityFeaturesInner enum
var AllowedFacilityFeaturesInnerEnumValues = []FacilityFeaturesInner{
	"baremetal",
	"backend_transfer",
	"layer_2",
	"global_ipv4",
	"ibx",
}

func (v *FacilityFeaturesInner) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FacilityFeaturesInner(value)
	for _, existing := range AllowedFacilityFeaturesInnerEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FacilityFeaturesInner", value)
}

// NewFacilityFeaturesInnerFromValue returns a pointer to a valid FacilityFeaturesInner
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewFacilityFeaturesInnerFromValue(v string) (*FacilityFeaturesInner, error) {
	ev := FacilityFeaturesInner(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for FacilityFeaturesInner: valid values are %v", v, AllowedFacilityFeaturesInnerEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v FacilityFeaturesInner) IsValid() bool {
	for _, existing := range AllowedFacilityFeaturesInnerEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Facility_features_inner value
func (v FacilityFeaturesInner) Ptr() *FacilityFeaturesInner {
	return &v
}

type NullableFacilityFeaturesInner struct {
	value *FacilityFeaturesInner
	isSet bool
}

func (v NullableFacilityFeaturesInner) Get() *FacilityFeaturesInner {
	return v.value
}

func (v *NullableFacilityFeaturesInner) Set(val *FacilityFeaturesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableFacilityFeaturesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableFacilityFeaturesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFacilityFeaturesInner(val *FacilityFeaturesInner) *NullableFacilityFeaturesInner {
	return &NullableFacilityFeaturesInner{value: val, isSet: true}
}

func (v NullableFacilityFeaturesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFacilityFeaturesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
