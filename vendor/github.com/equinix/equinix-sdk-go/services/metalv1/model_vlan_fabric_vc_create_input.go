/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"fmt"
)

// checks if the VlanFabricVcCreateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VlanFabricVcCreateInput{}

// VlanFabricVcCreateInput struct for VlanFabricVcCreateInput
type VlanFabricVcCreateInput struct {
	// The preferred email used for communication and notifications about the Equinix Fabric interconnection. Optional and defaults to the primary user email address when using a User API key or the organization owner email address when using a Project API key.
	ContactEmail *string `json:"contact_email,omitempty"`
	Description  *string `json:"description,omitempty"`
	FacilityId   *string `json:"facility_id,omitempty"`
	// A Metro ID or code. When creating Fabric VCs (Metal Billed), this is where interconnection will be originating from, as we pre-authorize the use of one of our shared ports as the origin of the interconnection using A-Side service tokens. We only allow local connections for Fabric VCs (Metal Billed), so the destination location must be the same as the origin. For Fabric VCs (Fabric Billed), or shared connections, this will be the destination of the interconnection. We allow remote connections for Fabric VCs (Fabric Billed), so the origin of the interconnection can be a different metro set here.
	Metro   string  `json:"metro"`
	Name    string  `json:"name"`
	Project *string `json:"project,omitempty"`
	// Either 'primary' or 'redundant'.
	Redundancy       string                                  `json:"redundancy"`
	ServiceTokenType VlanFabricVcCreateInputServiceTokenType `json:"service_token_type"`
	// A interconnection speed, in bps, mbps, or gbps. For Fabric VCs, this represents the maximum speed of the interconnection. For Fabric VCs (Metal Billed), this can only be one of the following:  ''50mbps'', ''200mbps'', ''500mbps'', ''1gbps'', ''2gbps'', ''5gbps'' or ''10gbps'', and is required for creation. For Fabric VCs (Fabric Billed), this field will always default to ''10gbps'' even if it is not provided. For example, ''500000000'', ''50m'', or' ''500mbps'' will all work as valid inputs.
	Speed *string                     `json:"speed,omitempty"`
	Tags  []string                    `json:"tags,omitempty"`
	Type  VlanFabricVcCreateInputType `json:"type"`
	// A list of one or two metro-based VLANs that will be set on the virtual circuits of primary and/or secondary (if redundant) interconnections respectively when creating Fabric VCs. VLANs can also be set after the interconnection is created, but are required to fully activate the virtual circuits.
	Vlans                []int32 `json:"vlans"`
	AdditionalProperties map[string]interface{}
}

type _VlanFabricVcCreateInput VlanFabricVcCreateInput

// NewVlanFabricVcCreateInput instantiates a new VlanFabricVcCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVlanFabricVcCreateInput(metro string, name string, redundancy string, serviceTokenType VlanFabricVcCreateInputServiceTokenType, type_ VlanFabricVcCreateInputType, vlans []int32) *VlanFabricVcCreateInput {
	this := VlanFabricVcCreateInput{}
	this.Metro = metro
	this.Name = name
	this.Redundancy = redundancy
	this.ServiceTokenType = serviceTokenType
	this.Type = type_
	this.Vlans = vlans
	return &this
}

// NewVlanFabricVcCreateInputWithDefaults instantiates a new VlanFabricVcCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVlanFabricVcCreateInputWithDefaults() *VlanFabricVcCreateInput {
	this := VlanFabricVcCreateInput{}
	return &this
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise.
func (o *VlanFabricVcCreateInput) GetContactEmail() string {
	if o == nil || IsNil(o.ContactEmail) {
		var ret string
		return ret
	}
	return *o.ContactEmail
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetContactEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ContactEmail) {
		return nil, false
	}
	return o.ContactEmail, true
}

// HasContactEmail returns a boolean if a field has been set.
func (o *VlanFabricVcCreateInput) HasContactEmail() bool {
	if o != nil && !IsNil(o.ContactEmail) {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given string and assigns it to the ContactEmail field.
func (o *VlanFabricVcCreateInput) SetContactEmail(v string) {
	o.ContactEmail = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VlanFabricVcCreateInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VlanFabricVcCreateInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VlanFabricVcCreateInput) SetDescription(v string) {
	o.Description = &v
}

// GetFacilityId returns the FacilityId field value if set, zero value otherwise.
func (o *VlanFabricVcCreateInput) GetFacilityId() string {
	if o == nil || IsNil(o.FacilityId) {
		var ret string
		return ret
	}
	return *o.FacilityId
}

// GetFacilityIdOk returns a tuple with the FacilityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetFacilityIdOk() (*string, bool) {
	if o == nil || IsNil(o.FacilityId) {
		return nil, false
	}
	return o.FacilityId, true
}

// HasFacilityId returns a boolean if a field has been set.
func (o *VlanFabricVcCreateInput) HasFacilityId() bool {
	if o != nil && !IsNil(o.FacilityId) {
		return true
	}

	return false
}

// SetFacilityId gets a reference to the given string and assigns it to the FacilityId field.
func (o *VlanFabricVcCreateInput) SetFacilityId(v string) {
	o.FacilityId = &v
}

// GetMetro returns the Metro field value
func (o *VlanFabricVcCreateInput) GetMetro() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metro
}

// GetMetroOk returns a tuple with the Metro field value
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetMetroOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Metro, true
}

// SetMetro sets field value
func (o *VlanFabricVcCreateInput) SetMetro(v string) {
	o.Metro = v
}

// GetName returns the Name field value
func (o *VlanFabricVcCreateInput) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VlanFabricVcCreateInput) SetName(v string) {
	o.Name = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *VlanFabricVcCreateInput) GetProject() string {
	if o == nil || IsNil(o.Project) {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetProjectOk() (*string, bool) {
	if o == nil || IsNil(o.Project) {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *VlanFabricVcCreateInput) HasProject() bool {
	if o != nil && !IsNil(o.Project) {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *VlanFabricVcCreateInput) SetProject(v string) {
	o.Project = &v
}

// GetRedundancy returns the Redundancy field value
func (o *VlanFabricVcCreateInput) GetRedundancy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Redundancy
}

// GetRedundancyOk returns a tuple with the Redundancy field value
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetRedundancyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Redundancy, true
}

// SetRedundancy sets field value
func (o *VlanFabricVcCreateInput) SetRedundancy(v string) {
	o.Redundancy = v
}

// GetServiceTokenType returns the ServiceTokenType field value
func (o *VlanFabricVcCreateInput) GetServiceTokenType() VlanFabricVcCreateInputServiceTokenType {
	if o == nil {
		var ret VlanFabricVcCreateInputServiceTokenType
		return ret
	}

	return o.ServiceTokenType
}

// GetServiceTokenTypeOk returns a tuple with the ServiceTokenType field value
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetServiceTokenTypeOk() (*VlanFabricVcCreateInputServiceTokenType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceTokenType, true
}

// SetServiceTokenType sets field value
func (o *VlanFabricVcCreateInput) SetServiceTokenType(v VlanFabricVcCreateInputServiceTokenType) {
	o.ServiceTokenType = v
}

// GetSpeed returns the Speed field value if set, zero value otherwise.
func (o *VlanFabricVcCreateInput) GetSpeed() string {
	if o == nil || IsNil(o.Speed) {
		var ret string
		return ret
	}
	return *o.Speed
}

// GetSpeedOk returns a tuple with the Speed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetSpeedOk() (*string, bool) {
	if o == nil || IsNil(o.Speed) {
		return nil, false
	}
	return o.Speed, true
}

// HasSpeed returns a boolean if a field has been set.
func (o *VlanFabricVcCreateInput) HasSpeed() bool {
	if o != nil && !IsNil(o.Speed) {
		return true
	}

	return false
}

// SetSpeed gets a reference to the given string and assigns it to the Speed field.
func (o *VlanFabricVcCreateInput) SetSpeed(v string) {
	o.Speed = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *VlanFabricVcCreateInput) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *VlanFabricVcCreateInput) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *VlanFabricVcCreateInput) SetTags(v []string) {
	o.Tags = v
}

// GetType returns the Type field value
func (o *VlanFabricVcCreateInput) GetType() VlanFabricVcCreateInputType {
	if o == nil {
		var ret VlanFabricVcCreateInputType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetTypeOk() (*VlanFabricVcCreateInputType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VlanFabricVcCreateInput) SetType(v VlanFabricVcCreateInputType) {
	o.Type = v
}

// GetVlans returns the Vlans field value
func (o *VlanFabricVcCreateInput) GetVlans() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Vlans
}

// GetVlansOk returns a tuple with the Vlans field value
// and a boolean to check if the value has been set.
func (o *VlanFabricVcCreateInput) GetVlansOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vlans, true
}

// SetVlans sets field value
func (o *VlanFabricVcCreateInput) SetVlans(v []int32) {
	o.Vlans = v
}

func (o VlanFabricVcCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VlanFabricVcCreateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContactEmail) {
		toSerialize["contact_email"] = o.ContactEmail
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FacilityId) {
		toSerialize["facility_id"] = o.FacilityId
	}
	toSerialize["metro"] = o.Metro
	toSerialize["name"] = o.Name
	if !IsNil(o.Project) {
		toSerialize["project"] = o.Project
	}
	toSerialize["redundancy"] = o.Redundancy
	toSerialize["service_token_type"] = o.ServiceTokenType
	if !IsNil(o.Speed) {
		toSerialize["speed"] = o.Speed
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["type"] = o.Type
	toSerialize["vlans"] = o.Vlans

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VlanFabricVcCreateInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"metro",
		"name",
		"redundancy",
		"service_token_type",
		"type",
		"vlans",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVlanFabricVcCreateInput := _VlanFabricVcCreateInput{}

	err = json.Unmarshal(data, &varVlanFabricVcCreateInput)

	if err != nil {
		return err
	}

	*o = VlanFabricVcCreateInput(varVlanFabricVcCreateInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "contact_email")
		delete(additionalProperties, "description")
		delete(additionalProperties, "facility_id")
		delete(additionalProperties, "metro")
		delete(additionalProperties, "name")
		delete(additionalProperties, "project")
		delete(additionalProperties, "redundancy")
		delete(additionalProperties, "service_token_type")
		delete(additionalProperties, "speed")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "type")
		delete(additionalProperties, "vlans")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVlanFabricVcCreateInput struct {
	value *VlanFabricVcCreateInput
	isSet bool
}

func (v NullableVlanFabricVcCreateInput) Get() *VlanFabricVcCreateInput {
	return v.value
}

func (v *NullableVlanFabricVcCreateInput) Set(val *VlanFabricVcCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableVlanFabricVcCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableVlanFabricVcCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVlanFabricVcCreateInput(val *VlanFabricVcCreateInput) *NullableVlanFabricVcCreateInput {
	return &NullableVlanFabricVcCreateInput{value: val, isSet: true}
}

func (v NullableVlanFabricVcCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVlanFabricVcCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
