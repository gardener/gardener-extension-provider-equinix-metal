/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
	"time"
)

// checks if the MetalGatewayLite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MetalGatewayLite{}

// MetalGatewayLite struct for MetalGatewayLite
type MetalGatewayLite struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The gateway address with subnet CIDR value for this Metal Gateway. For example, a Metal Gateway using an IP reservation with block 10.1.2.0/27 would have a gateway address of 10.1.2.1/27.
	GatewayAddress *string            `json:"gateway_address,omitempty"`
	Href           *string            `json:"href,omitempty"`
	Id             *string            `json:"id,omitempty"`
	State          *MetalGatewayState `json:"state,omitempty"`
	UpdatedAt      *time.Time         `json:"updated_at,omitempty"`
	// The VLAN id of the Virtual Network record associated to this Metal Gateway.
	Vlan                 *int32 `json:"vlan,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MetalGatewayLite MetalGatewayLite

// NewMetalGatewayLite instantiates a new MetalGatewayLite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMetalGatewayLite() *MetalGatewayLite {
	this := MetalGatewayLite{}
	return &this
}

// NewMetalGatewayLiteWithDefaults instantiates a new MetalGatewayLite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMetalGatewayLiteWithDefaults() *MetalGatewayLite {
	this := MetalGatewayLite{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MetalGatewayLite) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetGatewayAddress returns the GatewayAddress field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetGatewayAddress() string {
	if o == nil || IsNil(o.GatewayAddress) {
		var ret string
		return ret
	}
	return *o.GatewayAddress
}

// GetGatewayAddressOk returns a tuple with the GatewayAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetGatewayAddressOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayAddress) {
		return nil, false
	}
	return o.GatewayAddress, true
}

// HasGatewayAddress returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasGatewayAddress() bool {
	if o != nil && !IsNil(o.GatewayAddress) {
		return true
	}

	return false
}

// SetGatewayAddress gets a reference to the given string and assigns it to the GatewayAddress field.
func (o *MetalGatewayLite) SetGatewayAddress(v string) {
	o.GatewayAddress = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *MetalGatewayLite) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MetalGatewayLite) SetId(v string) {
	o.Id = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetState() MetalGatewayState {
	if o == nil || IsNil(o.State) {
		var ret MetalGatewayState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetStateOk() (*MetalGatewayState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given MetalGatewayState and assigns it to the State field.
func (o *MetalGatewayLite) SetState(v MetalGatewayState) {
	o.State = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *MetalGatewayLite) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetVlan returns the Vlan field value if set, zero value otherwise.
func (o *MetalGatewayLite) GetVlan() int32 {
	if o == nil || IsNil(o.Vlan) {
		var ret int32
		return ret
	}
	return *o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MetalGatewayLite) GetVlanOk() (*int32, bool) {
	if o == nil || IsNil(o.Vlan) {
		return nil, false
	}
	return o.Vlan, true
}

// HasVlan returns a boolean if a field has been set.
func (o *MetalGatewayLite) HasVlan() bool {
	if o != nil && !IsNil(o.Vlan) {
		return true
	}

	return false
}

// SetVlan gets a reference to the given int32 and assigns it to the Vlan field.
func (o *MetalGatewayLite) SetVlan(v int32) {
	o.Vlan = &v
}

func (o MetalGatewayLite) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MetalGatewayLite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.GatewayAddress) {
		toSerialize["gateway_address"] = o.GatewayAddress
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Vlan) {
		toSerialize["vlan"] = o.Vlan
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MetalGatewayLite) UnmarshalJSON(data []byte) (err error) {
	varMetalGatewayLite := _MetalGatewayLite{}

	err = json.Unmarshal(data, &varMetalGatewayLite)

	if err != nil {
		return err
	}

	*o = MetalGatewayLite(varMetalGatewayLite)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "gateway_address")
		delete(additionalProperties, "href")
		delete(additionalProperties, "id")
		delete(additionalProperties, "state")
		delete(additionalProperties, "updated_at")
		delete(additionalProperties, "vlan")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMetalGatewayLite struct {
	value *MetalGatewayLite
	isSet bool
}

func (v NullableMetalGatewayLite) Get() *MetalGatewayLite {
	return v.value
}

func (v *NullableMetalGatewayLite) Set(val *MetalGatewayLite) {
	v.value = val
	v.isSet = true
}

func (v NullableMetalGatewayLite) IsSet() bool {
	return v.isSet
}

func (v *NullableMetalGatewayLite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMetalGatewayLite(val *MetalGatewayLite) *NullableMetalGatewayLite {
	return &NullableMetalGatewayLite{value: val, isSet: true}
}

func (v NullableMetalGatewayLite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMetalGatewayLite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
