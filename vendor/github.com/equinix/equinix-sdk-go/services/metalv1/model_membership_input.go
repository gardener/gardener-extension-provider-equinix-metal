/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the MembershipInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipInput{}

// MembershipInput struct for MembershipInput
type MembershipInput struct {
	Role                 []string `json:"role,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _MembershipInput MembershipInput

// NewMembershipInput instantiates a new MembershipInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipInput() *MembershipInput {
	this := MembershipInput{}
	return &this
}

// NewMembershipInputWithDefaults instantiates a new MembershipInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipInputWithDefaults() *MembershipInput {
	this := MembershipInput{}
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *MembershipInput) GetRole() []string {
	if o == nil || IsNil(o.Role) {
		var ret []string
		return ret
	}
	return o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipInput) GetRoleOk() ([]string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *MembershipInput) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given []string and assigns it to the Role field.
func (o *MembershipInput) SetRole(v []string) {
	o.Role = v
}

func (o MembershipInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MembershipInput) UnmarshalJSON(data []byte) (err error) {
	varMembershipInput := _MembershipInput{}

	err = json.Unmarshal(data, &varMembershipInput)

	if err != nil {
		return err
	}

	*o = MembershipInput(varMembershipInput)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "role")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMembershipInput struct {
	value *MembershipInput
	isSet bool
}

func (v NullableMembershipInput) Get() *MembershipInput {
	return v.value
}

func (v *NullableMembershipInput) Set(val *MembershipInput) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipInput) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipInput(val *MembershipInput) *NullableMembershipInput {
	return &NullableMembershipInput{value: val, isSet: true}
}

func (v NullableMembershipInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
