/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the PlanSpecsDrivesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlanSpecsDrivesInner{}

// PlanSpecsDrivesInner struct for PlanSpecsDrivesInner
type PlanSpecsDrivesInner struct {
	Count *int32 `json:"count,omitempty"`
	// Values may include 'HDD', 'SSD', 'NVME'
	Type *string `json:"type,omitempty"`
	Size *string `json:"size,omitempty"`
	// Values may include 'boot', 'cache', 'storage'
	Category             *string `json:"category,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PlanSpecsDrivesInner PlanSpecsDrivesInner

// NewPlanSpecsDrivesInner instantiates a new PlanSpecsDrivesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlanSpecsDrivesInner() *PlanSpecsDrivesInner {
	this := PlanSpecsDrivesInner{}
	return &this
}

// NewPlanSpecsDrivesInnerWithDefaults instantiates a new PlanSpecsDrivesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanSpecsDrivesInnerWithDefaults() *PlanSpecsDrivesInner {
	this := PlanSpecsDrivesInner{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *PlanSpecsDrivesInner) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSpecsDrivesInner) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *PlanSpecsDrivesInner) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *PlanSpecsDrivesInner) SetCount(v int32) {
	o.Count = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *PlanSpecsDrivesInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSpecsDrivesInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *PlanSpecsDrivesInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *PlanSpecsDrivesInner) SetType(v string) {
	o.Type = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *PlanSpecsDrivesInner) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSpecsDrivesInner) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *PlanSpecsDrivesInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *PlanSpecsDrivesInner) SetSize(v string) {
	o.Size = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *PlanSpecsDrivesInner) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlanSpecsDrivesInner) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *PlanSpecsDrivesInner) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *PlanSpecsDrivesInner) SetCategory(v string) {
	o.Category = &v
}

func (o PlanSpecsDrivesInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlanSpecsDrivesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PlanSpecsDrivesInner) UnmarshalJSON(data []byte) (err error) {
	varPlanSpecsDrivesInner := _PlanSpecsDrivesInner{}

	err = json.Unmarshal(data, &varPlanSpecsDrivesInner)

	if err != nil {
		return err
	}

	*o = PlanSpecsDrivesInner(varPlanSpecsDrivesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "count")
		delete(additionalProperties, "type")
		delete(additionalProperties, "size")
		delete(additionalProperties, "category")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePlanSpecsDrivesInner struct {
	value *PlanSpecsDrivesInner
	isSet bool
}

func (v NullablePlanSpecsDrivesInner) Get() *PlanSpecsDrivesInner {
	return v.value
}

func (v *NullablePlanSpecsDrivesInner) Set(val *PlanSpecsDrivesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePlanSpecsDrivesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePlanSpecsDrivesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlanSpecsDrivesInner(val *PlanSpecsDrivesInner) *NullablePlanSpecsDrivesInner {
	return &NullablePlanSpecsDrivesInner{value: val, isSet: true}
}

func (v NullablePlanSpecsDrivesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlanSpecsDrivesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
