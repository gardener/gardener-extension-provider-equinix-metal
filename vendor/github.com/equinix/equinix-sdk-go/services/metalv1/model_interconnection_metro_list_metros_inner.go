/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the InterconnectionMetroListMetrosInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InterconnectionMetroListMetrosInner{}

// InterconnectionMetroListMetrosInner struct for InterconnectionMetroListMetrosInner
type InterconnectionMetroListMetrosInner struct {
	Code    *string `json:"code,omitempty"`
	Country *string `json:"country,omitempty"`
	Id      *string `json:"id,omitempty"`
	Name    *string `json:"name,omitempty"`
	// A list of providers and their equivalent regions available for connecting to the provider network.
	Providers            []InterconnectionMetroListMetrosInnerAllOfProvidersInner `json:"providers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InterconnectionMetroListMetrosInner InterconnectionMetroListMetrosInner

// NewInterconnectionMetroListMetrosInner instantiates a new InterconnectionMetroListMetrosInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInterconnectionMetroListMetrosInner() *InterconnectionMetroListMetrosInner {
	this := InterconnectionMetroListMetrosInner{}
	return &this
}

// NewInterconnectionMetroListMetrosInnerWithDefaults instantiates a new InterconnectionMetroListMetrosInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInterconnectionMetroListMetrosInnerWithDefaults() *InterconnectionMetroListMetrosInner {
	this := InterconnectionMetroListMetrosInner{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InterconnectionMetroListMetrosInner) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroListMetrosInner) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InterconnectionMetroListMetrosInner) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *InterconnectionMetroListMetrosInner) SetCode(v string) {
	o.Code = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *InterconnectionMetroListMetrosInner) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroListMetrosInner) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *InterconnectionMetroListMetrosInner) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *InterconnectionMetroListMetrosInner) SetCountry(v string) {
	o.Country = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InterconnectionMetroListMetrosInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroListMetrosInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InterconnectionMetroListMetrosInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *InterconnectionMetroListMetrosInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InterconnectionMetroListMetrosInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroListMetrosInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InterconnectionMetroListMetrosInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InterconnectionMetroListMetrosInner) SetName(v string) {
	o.Name = &v
}

// GetProviders returns the Providers field value if set, zero value otherwise.
func (o *InterconnectionMetroListMetrosInner) GetProviders() []InterconnectionMetroListMetrosInnerAllOfProvidersInner {
	if o == nil || IsNil(o.Providers) {
		var ret []InterconnectionMetroListMetrosInnerAllOfProvidersInner
		return ret
	}
	return o.Providers
}

// GetProvidersOk returns a tuple with the Providers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InterconnectionMetroListMetrosInner) GetProvidersOk() ([]InterconnectionMetroListMetrosInnerAllOfProvidersInner, bool) {
	if o == nil || IsNil(o.Providers) {
		return nil, false
	}
	return o.Providers, true
}

// HasProviders returns a boolean if a field has been set.
func (o *InterconnectionMetroListMetrosInner) HasProviders() bool {
	if o != nil && !IsNil(o.Providers) {
		return true
	}

	return false
}

// SetProviders gets a reference to the given []InterconnectionMetroListMetrosInnerAllOfProvidersInner and assigns it to the Providers field.
func (o *InterconnectionMetroListMetrosInner) SetProviders(v []InterconnectionMetroListMetrosInnerAllOfProvidersInner) {
	o.Providers = v
}

func (o InterconnectionMetroListMetrosInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InterconnectionMetroListMetrosInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Providers) {
		toSerialize["providers"] = o.Providers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InterconnectionMetroListMetrosInner) UnmarshalJSON(data []byte) (err error) {
	varInterconnectionMetroListMetrosInner := _InterconnectionMetroListMetrosInner{}

	err = json.Unmarshal(data, &varInterconnectionMetroListMetrosInner)

	if err != nil {
		return err
	}

	*o = InterconnectionMetroListMetrosInner(varInterconnectionMetroListMetrosInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "code")
		delete(additionalProperties, "country")
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "providers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInterconnectionMetroListMetrosInner struct {
	value *InterconnectionMetroListMetrosInner
	isSet bool
}

func (v NullableInterconnectionMetroListMetrosInner) Get() *InterconnectionMetroListMetrosInner {
	return v.value
}

func (v *NullableInterconnectionMetroListMetrosInner) Set(val *InterconnectionMetroListMetrosInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInterconnectionMetroListMetrosInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInterconnectionMetroListMetrosInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInterconnectionMetroListMetrosInner(val *InterconnectionMetroListMetrosInner) *NullableInterconnectionMetroListMetrosInner {
	return &NullableInterconnectionMetroListMetrosInner{value: val, isSet: true}
}

func (v NullableInterconnectionMetroListMetrosInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInterconnectionMetroListMetrosInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
