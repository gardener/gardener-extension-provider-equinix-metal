/*
Metal API

Contact: support@equinixmetal.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package metalv1

import (
	"encoding/json"
)

// checks if the PortConvertLayer3Input type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PortConvertLayer3Input{}

// PortConvertLayer3Input struct for PortConvertLayer3Input
type PortConvertLayer3Input struct {
	RequestIps           []PortConvertLayer3InputRequestIpsInner `json:"request_ips,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PortConvertLayer3Input PortConvertLayer3Input

// NewPortConvertLayer3Input instantiates a new PortConvertLayer3Input object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPortConvertLayer3Input() *PortConvertLayer3Input {
	this := PortConvertLayer3Input{}
	return &this
}

// NewPortConvertLayer3InputWithDefaults instantiates a new PortConvertLayer3Input object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPortConvertLayer3InputWithDefaults() *PortConvertLayer3Input {
	this := PortConvertLayer3Input{}
	return &this
}

// GetRequestIps returns the RequestIps field value if set, zero value otherwise.
func (o *PortConvertLayer3Input) GetRequestIps() []PortConvertLayer3InputRequestIpsInner {
	if o == nil || IsNil(o.RequestIps) {
		var ret []PortConvertLayer3InputRequestIpsInner
		return ret
	}
	return o.RequestIps
}

// GetRequestIpsOk returns a tuple with the RequestIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PortConvertLayer3Input) GetRequestIpsOk() ([]PortConvertLayer3InputRequestIpsInner, bool) {
	if o == nil || IsNil(o.RequestIps) {
		return nil, false
	}
	return o.RequestIps, true
}

// HasRequestIps returns a boolean if a field has been set.
func (o *PortConvertLayer3Input) HasRequestIps() bool {
	if o != nil && !IsNil(o.RequestIps) {
		return true
	}

	return false
}

// SetRequestIps gets a reference to the given []PortConvertLayer3InputRequestIpsInner and assigns it to the RequestIps field.
func (o *PortConvertLayer3Input) SetRequestIps(v []PortConvertLayer3InputRequestIpsInner) {
	o.RequestIps = v
}

func (o PortConvertLayer3Input) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PortConvertLayer3Input) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestIps) {
		toSerialize["request_ips"] = o.RequestIps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PortConvertLayer3Input) UnmarshalJSON(data []byte) (err error) {
	varPortConvertLayer3Input := _PortConvertLayer3Input{}

	err = json.Unmarshal(data, &varPortConvertLayer3Input)

	if err != nil {
		return err
	}

	*o = PortConvertLayer3Input(varPortConvertLayer3Input)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "request_ips")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePortConvertLayer3Input struct {
	value *PortConvertLayer3Input
	isSet bool
}

func (v NullablePortConvertLayer3Input) Get() *PortConvertLayer3Input {
	return v.value
}

func (v *NullablePortConvertLayer3Input) Set(val *PortConvertLayer3Input) {
	v.value = val
	v.isSet = true
}

func (v NullablePortConvertLayer3Input) IsSet() bool {
	return v.isSet
}

func (v *NullablePortConvertLayer3Input) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePortConvertLayer3Input(val *PortConvertLayer3Input) *NullablePortConvertLayer3Input {
	return &NullablePortConvertLayer3Input{value: val, isSet: true}
}

func (v NullablePortConvertLayer3Input) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePortConvertLayer3Input) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
